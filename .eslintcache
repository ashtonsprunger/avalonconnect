[{"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js":"1","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx":"3","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx":"4","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx":"5","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx":"6","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx":"7","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx":"8","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx":"9","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx":"10","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\PassFail.jsx":"11","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Missions.jsx":"12"},{"size":547,"mtime":1611851486428,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1368,"mtime":1624415941568,"results":"16","hashOfConfig":"14"},{"size":2082,"mtime":1624415876897,"results":"17","hashOfConfig":"14"},{"size":6463,"mtime":1624408365678,"results":"18","hashOfConfig":"14"},{"size":1625,"mtime":1611863747250,"results":"19","hashOfConfig":"14"},{"size":2522,"mtime":1624417033264,"results":"20","hashOfConfig":"14"},{"size":6720,"mtime":1624415089009,"results":"21","hashOfConfig":"14"},{"size":1140,"mtime":1612311513911,"results":"22","hashOfConfig":"14"},{"size":1384,"mtime":1624414472473,"results":"23","hashOfConfig":"14"},{"size":1401,"mtime":1624410797590,"results":"24","hashOfConfig":"14"},{"size":849,"mtime":1624412827236,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c5qjdc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js",[],["60","61"],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx",["62","63","64","65"],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport queryString from \"querystring\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Game from \"./Components/Game/Game\";\nimport Join from \"./Components/Join/Join\";\nimport Host from \"./Components/Host/Host\";\n\nconst App = () => {\n  // const socketRef = useRef();\n  const [inRoom, setInRoom] = useState(false);\n\n  useEffect(() => {\n    // socket = io(\"avalonconnect-server.herokuapp.com\"); //! CHANGE BEFORE PUSHING\n    // socket = io(\"localhost:3333\");\n    // socket.emit(\"here\");\n    // console.log(\"SOCKET:\", socket);\n    // socket.on(\"count\", (count) => {\n    //   setCount(count);\n    // });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/join/:room\">\n            <Join />\n          </Route>\n          <Route exact path=\"/join\">\n            <Join />\n          </Route>\n          <Route exact path=\"/host\">\n            <Host />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/join\" />\n          </Route>\n          <Route path=\"/game/:username/:room/:host\">\n            <Game />\n          </Route>\n          <Route>\n            <Redirect to=\"/join\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx",["66","67","68"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(useParams().room);\r\n\r\n  useEffect(() => {\r\n    if(username){\r\n      window.localStorage.setItem('username', username)\r\n    }\r\n  }, [username])\r\n\r\n  useEffect(() => {\r\n    if(window.localStorage.getItem('username') != ''){\r\n      setUsername(window.localStorage.getItem('username'))\r\n    }\r\n    // if(useParams().room){\r\n    //   setRoom(useParams().room)\r\n    // }\r\n  }, [])\r\n\r\n  const handleNameChange = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"joinWrapper\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Join a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"joinUsername\"\r\n              value={username}\r\n              onChange={handleNameChange}\r\n              placeholder=\"Enter name...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            GAME CODE\r\n            <Input\r\n              className=\"joinRoom\"\r\n              value={room}\r\n              onChange={(e) => setRoom(e.target.value)}\r\n              placeholder=\"Enter game code...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"joinGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"GAME CODE MUST BE 4 DIGITS!!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/false`}\r\n        >\r\n          JOIN\r\n        </Link>\r\n      </Form>\r\n      <Link to=\"/host\">host a game</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx",["69","70","71","72","73","74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Game.css\";\r\n\r\nimport Waiting from \"./GameComponents/Waiting\";\r\nimport Team from \"./GameComponents/Team\";\r\nimport Roll from \"./GameComponents/Roll\";\r\n\r\nlet socket;\r\n\r\nconst Game = () => {\r\n  const [username, setUsername] = useState(useParams().username.toUpperCase());\r\n  const [room, setRoom] = useState(useParams().room.toUpperCase());\r\n  const [users, setUsers] = useState([]);\r\n  const [rollOpen, setRollOpen] = useState(true);\r\n  const [host, setHost] = useState(useParams().host === \"true\" ? true : false);\r\n  const [render, setRender] = useState(\"waiting\");\r\n  const [roll, setRoll] = useState();\r\n  const [sees, setSees] = useState();\r\n  const [king, setKing] = useState();\r\n  const [onTeam, setOnTeam] = useState([]);\r\n  const [acceptedPeople, setAcceptedPeople] = useState([]);\r\n  const [rejectedPeople, setRejectedPeople] = useState([]);\r\n  const [gameInfo, setGameInfo] = useState();\r\n  const [currentMission, setCurrentMission] = useState(1);\r\n  const [missions, setMissions] = useState([]);\r\n  const [voting, setVoting] = useState(false);\r\n  const [displayVote, setDisplayVote] = useState(false);\r\n  const [kingStarted, setKingStarted] = useState(false);\r\n  const [passFail, setPassFail] = useState(false);\r\n  const [passesFails, setPassesFails] = useState([]);\r\n  const [lastRound, setLastRound] = useState();\r\n\r\n  useEffect(() => {\r\n    // socket = io(\"avalonconnect-server.herokuapp.com\"); //! FOR HEROKU\r\n    socket = io(\"localhost:3333\"); //! FOR LOCAL\r\n    console.log(\"SOCKET\", socket);\r\n\r\n    //! joining the game room\r\n    socket.emit(\"joinRoom\", { room, username });\r\n\r\n    socket.on(\"roomUsers\", ({ room, users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on(\"newRender\", newRender);\r\n    socket.on(\"newKing\", newKing);\r\n    socket.on(\"newOnTeam\", newOnTeam);\r\n    socket.on(\"newAcceptedRejected\", newAcceptedRejected);\r\n    socket.on(\"newPassFail\", setPassesFails);\r\n    socket.on(\"newPassFailSingle\", setPassFail);\r\n\r\n    socket.on(\"showVote\", showVote);\r\n\r\n    socket.on(\"charReveal\", ({ roll, sees }) => {\r\n      setSees(sees);\r\n      setRoll(roll);\r\n      console.log(\"roll, sees:\", roll, sees);\r\n    });\r\n    socket.on(\"gameInfo\", setGameInfo);\r\n    socket.on(\"callVote\", callVote);\r\n    socket.on(\"voting\", setVoting);\r\n    socket.on(\"lastRound\", setLastRound);\r\n    socket.on(\"missions\", setMissions);\r\n    socket.on(\"currentMission\", setCurrentMission);\r\n  }, []);\r\n\r\n  const callVote = () => {\r\n    setKingStarted(true);\r\n    setVoting(true);\r\n  };\r\n\r\n  const newRender = (newR) => {\r\n    setRender(newR);\r\n  };\r\n\r\n  const newOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n  };\r\n\r\n  const changeOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n    socket.emit(\"changeOnTeam\", newO);\r\n  };\r\n\r\n  const newPassFail = (newPF) => {\r\n    socket.emit(newPF);\r\n  };\r\n\r\n  const newAcceptedRejected = (newAR) => {\r\n    setAcceptedPeople(newAR.accepted);\r\n    setRejectedPeople(newAR.rejected);\r\n  };\r\n\r\n  const showVote = (show) => {\r\n    setDisplayVote(show);\r\n  };\r\n\r\n  const addToRejected = (newR) => {\r\n    // setRejectedPeople([...rejectedPeople, newR]);\r\n    socket.emit(\"addToRejected\", newR);\r\n  };\r\n\r\n  const addToAccepted = (newA) => {\r\n    // setAcceptedPeople([...acceptedPeople, newA]);\r\n    socket.emit(\"addToAccepted\", newA);\r\n  };\r\n\r\n  const addToPass = (person) => {\r\n    socket.emit(\"addToPass\", person);\r\n  };\r\n\r\n  const addToFail = (person) => {\r\n    socket.emit(\"addToFail\", person);\r\n  };\r\n\r\n  const addMission = (passed, mission) => {\r\n    socket.emit(\"mission\", {\r\n      passed,\r\n      mission,\r\n    });\r\n  };\r\n\r\n  const changeRender = (newR) => {\r\n    setRender(newR);\r\n    socket.emit(\"changeRender\", newR);\r\n  };\r\n\r\n  const newKing = (newK) => {\r\n    setKing(newK);\r\n    console.log(`The new king is ${newK}`);\r\n  };\r\n\r\n  const changeKing = (newK) => {\r\n    setKing(newK);\r\n    socket.emit(\"changeKing\", newK);\r\n  };\r\n\r\n  const nextKing = () => {\r\n    socket.emit(\"lastRound\", {\r\n      king: king,\r\n      onTeam: onTeam,\r\n      rejectedPeople: rejectedPeople,\r\n      acceptedPeople: acceptedPeople,\r\n    });\r\n    socket.emit(\"nextKing\");\r\n  };\r\n\r\n  const toggleRoll = () => {\r\n    setRollOpen(!rollOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      {render !== \"waiting\" ? (\r\n        <>\r\n          <h2>\r\n            <Button onClick={toggleRoll}>\r\n              {rollOpen ? \"GOT IT\" : username.trim().toUpperCase()}\r\n            </Button>\r\n          </h2>\r\n        </>\r\n      ) : null}\r\n      {render === \"waiting\" ? (\r\n        socket ? (\r\n          <Waiting\r\n            changeRender={changeRender}\r\n            host={host}\r\n            room={room}\r\n            users={users}\r\n            setUsers={setUsers}\r\n            socket={socket}\r\n            setRollOpen={setRollOpen}\r\n          />\r\n        ) : null\r\n      ) : rollOpen ? (\r\n        <Roll newRender={newRender} roll={roll} sees={sees} socket={socket} />\r\n      ) : render === \"team\" ? (\r\n        <Team\r\n          onTeam={onTeam}\r\n          changeOnTeam={changeOnTeam}\r\n          rejectedPeople={rejectedPeople}\r\n          addToRejected={addToRejected}\r\n          acceptedPeople={acceptedPeople}\r\n          addToAccepted={addToAccepted}\r\n          king={king}\r\n          socket={socket}\r\n          users={users}\r\n          gameInfo={gameInfo}\r\n          currentMission={currentMission}\r\n          voting={voting}\r\n          setVoting={setVoting}\r\n          displayVote={displayVote}\r\n          setDisplayVote={setDisplayVote}\r\n          nextKing={nextKing}\r\n          kingStarted={kingStarted}\r\n          setKingStarted={setKingStarted}\r\n          lastRound={lastRound}\r\n          setLastRound={setLastRound}\r\n          passFail={passFail}\r\n          setPassFail={setPassFail}\r\n          passesFails={passesFails}\r\n          setPassesFails={setPassesFails}\r\n          roll={roll}\r\n          addToPass={addToPass}\r\n          addToFail={addToFail}\r\n          addMission={addMission}\r\n          missions={missions}\r\n          newPassFail={newPassFail}\r\n        />\r\n      ) : render === \"roll\" ? (\r\n        <Roll newRender={newRender} roll={roll} sees={sees} socket={socket} />\r\n      ) : render == \"merlin\" ? (\r\n        <>merlin</>\r\n      ) : render == \"results\" ? (\r\n        <>results</>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx",["76","77","78"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Host.css\";\r\n\r\nconst Host = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(makeid(4));\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Host a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"hostUsername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter name...\"\r\n              required\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"hostGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"Error!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/true`}\r\n        >\r\n          HOST\r\n        </Link>\r\n      </Form>\r\n      <Link to=\"/join\">join a game</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Host;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx",["79","80","81"],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport LastRound from \"./LastRound\";\r\nimport PassFail from \"./PassFail\";\r\nimport Missions from \"./Missions\";\r\n\r\nconst Team = (props) => {\r\n  useEffect(() => {\r\n    if (\r\n      props.kingStarted &&\r\n      props.voting == false &&\r\n      props.displayVote == true\r\n    ) {\r\n      if (props.rejectedPeople.length >= props.acceptedPeople.length) {\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setDisplayVote(false);\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setKingStarted(false);\r\n        if (props.king.id == props.socket.id) {\r\n          props.nextKing();\r\n        }\r\n      } else {\r\n        props.setPassFail(true);\r\n        props.setLastRound({\r\n          king: props.king,\r\n          onTeam: props.onTeam,\r\n          rejectedPeople: props.rejectedPeople,\r\n          acceptedPeople: props.acceptedPeople,\r\n        });\r\n      }\r\n    }\r\n  }, [props.displayVote, props.voting]);\r\n\r\n  useEffect(() => {\r\n    console.log(`Here is the displayVote: ${props.displayVote}`);\r\n  }, [props.displayVote]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.onTeam.length > 0 &&\r\n      props.passesFails.length == props.onTeam.length &&\r\n      props.king.id == props.socket.id\r\n    ) {\r\n      let passes = 0;\r\n      let fails = 0;\r\n      let passed;\r\n      for (let i = 0; i < props.passesFails.length; i++) {\r\n        if (props.passesFails[i]) {\r\n          passes++;\r\n        } else {\r\n          fails++;\r\n        }\r\n      }\r\n      if (props.gameInfo.twoFails && props.currentMission == 4) {\r\n        if (fails < 2) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      } else {\r\n        if (fails == 0) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      }\r\n      props.addMission(passed, props.currentMission);\r\n      //! Left off here\r\n      props.nextKing();\r\n      // props.newPassFail(false);\r\n      console.log(\"addMission\", passed, props.currentMission);\r\n    }\r\n  }, [props.passesFails]);\r\n\r\n  const handleAccept = () => {\r\n    if (!props.displayVote) {\r\n      props.addToAccepted(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleReject = () => {\r\n    if (!props.displayVote) {\r\n      props.addToRejected(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const userInUsers = (user, users) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].id === user.id) {\r\n        return [true, i];\r\n      }\r\n    }\r\n    return [false, -1];\r\n  };\r\n\r\n  const callVote = () => {\r\n    props.socket.emit(\"callVote\");\r\n    // props.setVoting(true);\r\n    // props.setKingStarted(true);\r\n  };\r\n\r\n  const toggleOnTeam = (user) => {\r\n    if (props.socket.id === props.king.id && !props.voting && !props.passFail) {\r\n      if (userInUsers(user, props.onTeam)[0]) {\r\n        props.changeOnTeam(\r\n          props.onTeam.filter((person) => person.id !== user.id)\r\n        );\r\n      } else if (\r\n        props.gameInfo.teams[props.currentMission - 1] > props.onTeam.length\r\n      ) {\r\n        props.changeOnTeam([...props.onTeam, user]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.king.id === props.socket.id ? (\r\n        <>\r\n          <h2>YOU ARE THE KING</h2>\r\n        </>\r\n      ) : (\r\n        <h2>{props.king.username} IS THE KING</h2>\r\n      )}\r\n      <Missions\r\n        currentMission={props.currentMission}\r\n        missions={props.missions}\r\n        gameInfo={props.gameInfo}\r\n      />\r\n      {props.users.map((user) => (\r\n        <h2\r\n          style={\r\n            userInUsers(user, props.onTeam)[0]\r\n              ? {\r\n                  backgroundColor: \"grey\",\r\n                  color: \"white\",\r\n                }\r\n              : {}\r\n          }\r\n          onClick={() => toggleOnTeam(user)}\r\n        >\r\n          {user.username}\r\n        </h2>\r\n      ))}\r\n      <br/>\r\n      <h5 style={{color: props.voting == true\r\n        ? props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n          ? \"#218838\"\r\n          : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"#dc3545\"\r\n          : null\r\n        : props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? '#218838'\r\n        : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? \"#dc3545\"\r\n        : props.displayVote\r\n        ? \"#ffc107\"\r\n        : null}}>{props.voting == true\r\n        ? props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n          ? \"You are approving...\"\r\n          : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You are rejecting...\"\r\n          : null\r\n        : props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? 'You approved'\r\n        : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? \"You rejected\"\r\n        : props.displayVote\r\n        ? \"You didn't vote\"\r\n        : null}</h5>\r\n      {props.passFail == true ? (\r\n        props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n        1 ? (\r\n          <h4>You are on the team</h4>\r\n        ) : (\r\n          <h4>Waiting for team to vote...</h4>\r\n        )\r\n      ) : null}\r\n      {props.passFail ? \r\n      <PassFail\r\n        onTeam={props.onTeam}\r\n        roll={props.roll}\r\n        passFail={props.passFail}\r\n        socket={props.socket}\r\n        users={props.users}\r\n        addToPass={props.addToPass}\r\n        addToFail={props.addToFail}\r\n      /> : null}\r\n      {props.gameInfo.teams[props.currentMission - 1] == props.onTeam.length &&\r\n      props.socket.id === props.king.id &&\r\n      !props.voting &&\r\n      !props.displayVote ? (\r\n        <Button onClick={callVote}>Call for a vote</Button>\r\n      ) : null}\r\n      {props.voting ? (\r\n        <>\r\n          <Button color=\"success\" onClick={handleAccept}>\r\n            APPROVE\r\n          </Button>{\" \"}\r\n          <Button color=\"danger\" onClick={handleReject}>\r\n            REJECT\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n      <br/>\r\n\r\n      <LastRound\r\n        lastRound={props.lastRound}\r\n        missions={props.missions}\r\n        currentMission={props.currentMission}\r\n        gameInfo={props.gameInfo}\r\n        passesFails={props.passesFails}\r\n        passFail={props.passFail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx",["115","116","117"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Roll = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        {props.roll === \"servant\"\r\n          ? \"You are a loyal servant of Arthur\"\r\n          : props.roll === \"percival\"\r\n          ? \"You are Percival\"\r\n          : props.roll === \"merlin\"\r\n          ? \"You are Merlin\"\r\n          : props.roll === \"minion\"\r\n          ? \"You are a minion of Mordred\"\r\n          : props.roll === \"morgana\"\r\n          ? \"You are Morgana\"\r\n          : props.roll === \"mordred\"\r\n          ? \"You are Mordred\"\r\n          : props.roll === \"oberon\"\r\n          ? \"You are Oberon\"\r\n          : null}\r\n      </h3>\r\n      <br />\r\n\r\n      {props.sees ? (\r\n        props.sees.length != 0 ? (\r\n          <>\r\n            <h4>you see:</h4>\r\n            <br />\r\n          </>\r\n        ) : null\r\n      ) : null}\r\n\r\n      {props.sees\r\n        ? props.sees.map((person) => (\r\n            <>\r\n              <h4>{person}</h4>\r\n              <br />\r\n            </>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roll;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx",["118","119","120","121"],"import React, {useState, useEffect} from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst LastRound = (props) => {\r\n  const [passesFails, setPassesFails] = useState([])\r\n  useEffect(() => {\r\n    if(!props.passFail){\r\n      setPassesFails(props.passesFails)\r\n    }\r\n  }, [props.passFail])\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {props.lastRound ? (\r\n        <>\r\n        <h5>{passesFails.length > 0 ? \r\n    `${passesFails.includes(true) ? passesFails.filter(item => item).length : 0} ${passesFails.filter(item => item).length == 1 ? 'pass' : 'passes'}, ${passesFails.includes(false) ? passesFails.filter(item => !item).length : 0} ${passesFails.filter(item => !item).length == 1 ? 'fail' : 'fails'}` : null}</h5>\r\n\r\n          <h4>The last king was {props.lastRound.king.username}</h4>\r\n          <h5>On the team:</h5>\r\n          {props.lastRound.onTeam.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Approved:</h5>\r\n          {props.lastRound.acceptedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Rejected:</h5>\r\n          {props.lastRound.rejectedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n        </>\r\n      ) : (\r\n        \"No last round!\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LastRound;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\PassFail.jsx",["122","123","124","125","126","127","128","129"],"import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst PassFail = (props) => {\r\n  /*\r\n    onTeam\r\n    passFail\r\n    socket\r\n    roll\r\n    */\r\n\r\n  const user = props.users.filter((user) => user.id == props.socket.id)[0];\r\n  const [isPassing, setIsPassing] = useState();\r\n\r\n  const pass = () => {\r\n    setIsPassing(true);\r\n  };\r\n\r\n  const fail = () => {\r\n    setIsPassing(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    if (isPassing) {\r\n      props.addToPass(user);\r\n    } else {\r\n      props.addToFail(user);\r\n    }\r\n  };\r\n\r\n  return props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n      1 ? (\r\n    <>\r\n      <Button onClick={pass} color=\"success\">\r\n        Pass\r\n      </Button>{\" \"}\r\n      {props.roll == \"morgana\" ||\r\n      props.roll == \"minion\" ||\r\n      props.roll == \"mordred\" ||\r\n      props.roll == \"oberon\" ? (\r\n        <>\r\n          <Button onClick={fail} color=\"danger\">\r\n            Fail\r\n          </Button><br/>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Button color=\"danger\" disabled={true}>\r\n            Fail\r\n          </Button><br/>\r\n        </>\r\n      )}\r\n      {isPassing != undefined ? (\r\n        <Button style={{marginTop: '0.5em'}} color=\"primary\" onClick={submit}>\r\n          {isPassing ? 'Submit pass' : 'Submit fail'}\r\n        </Button>\r\n      ) : null}\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default PassFail;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Missions.jsx",["130","131","132"],"import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Missions = (props) => {\r\n  return (\r\n    <>\r\n      {[0, 1, 2, 3, 4].map((index) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              color={\r\n                index == props.currentMission - 1\r\n                  ? \"primary\"\r\n                  : props.missions[index] == undefined\r\n                  ? \"secondary\"\r\n                  : props.missions[index]\r\n                  ? \"success\"\r\n                  : \"danger\"\r\n              }\r\n              style={{\r\n                color: index == 3 && props.gameInfo.twoFails ? \"black\" : \"\",\r\n              }}\r\n            >\r\n              {props.gameInfo.teams[index]}\r\n            </Button>{\" \"}\r\n          </>\r\n        );\r\n      })}\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Missions;\r\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":7},{"ruleId":"137","severity":1,"message":"142","line":18,"column":10,"nodeType":"139","messageId":"140","endLine":18,"endColumn":16},{"ruleId":"137","severity":1,"message":"143","line":18,"column":18,"nodeType":"139","messageId":"140","endLine":18,"endColumn":27},{"ruleId":"137","severity":1,"message":"144","line":2,"column":16,"nodeType":"139","messageId":"140","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":17,"column":48,"nodeType":"147","messageId":"148","endLine":17,"endColumn":50},{"ruleId":"145","severity":1,"message":"149","line":64,"column":29,"nodeType":"147","messageId":"148","endLine":64,"endColumn":31},{"ruleId":"137","severity":1,"message":"150","line":14,"column":20,"nodeType":"139","messageId":"140","endLine":14,"endColumn":31},{"ruleId":"137","severity":1,"message":"151","line":15,"column":16,"nodeType":"139","messageId":"140","endLine":15,"endColumn":23},{"ruleId":"137","severity":1,"message":"152","line":18,"column":16,"nodeType":"139","messageId":"140","endLine":18,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":68,"column":6,"nodeType":"155","endLine":68,"endColumn":8,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":136,"column":9,"nodeType":"139","messageId":"140","endLine":136,"endColumn":19},{"ruleId":"145","severity":1,"message":"149","line":215,"column":18,"nodeType":"147","messageId":"148","endLine":215,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":217,"column":18,"nodeType":"147","messageId":"148","endLine":217,"endColumn":20},{"ruleId":"137","severity":1,"message":"144","line":2,"column":16,"nodeType":"139","messageId":"140","endLine":2,"endColumn":24},{"ruleId":"137","severity":1,"message":"151","line":8,"column":16,"nodeType":"139","messageId":"140","endLine":8,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":47,"column":29,"nodeType":"147","messageId":"148","endLine":47,"endColumn":31},{"ruleId":"153","severity":1,"message":"158","line":20,"column":6,"nodeType":"155","endLine":20,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"149","line":67,"column":41,"nodeType":"147","messageId":"148","endLine":67,"endColumn":43},{"ruleId":"160","severity":1,"message":"161","line":94,"column":16,"nodeType":"162","endLine":94,"endColumn":34},{"ruleId":"137","severity":1,"message":"163","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"149","line":12,"column":20,"nodeType":"147","messageId":"148","endLine":12,"endColumn":22},{"ruleId":"145","severity":1,"message":"149","line":13,"column":25,"nodeType":"147","messageId":"148","endLine":13,"endColumn":27},{"ruleId":"145","severity":1,"message":"149","line":20,"column":27,"nodeType":"147","messageId":"148","endLine":20,"endColumn":29},{"ruleId":"153","severity":1,"message":"164","line":33,"column":6,"nodeType":"155","endLine":33,"endColumn":39,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"149","line":42,"column":32,"nodeType":"147","messageId":"148","endLine":42,"endColumn":34},{"ruleId":"145","severity":1,"message":"149","line":43,"column":21,"nodeType":"147","messageId":"148","endLine":43,"endColumn":23},{"ruleId":"137","severity":1,"message":"166","line":50,"column":11,"nodeType":"139","messageId":"140","endLine":50,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":55,"column":59,"nodeType":"147","messageId":"148","endLine":55,"endColumn":61},{"ruleId":"145","severity":1,"message":"149","line":62,"column":19,"nodeType":"147","messageId":"148","endLine":62,"endColumn":21},{"ruleId":"153","severity":1,"message":"164","line":74,"column":6,"nodeType":"155","endLine":74,"endColumn":25,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"149","line":151,"column":39,"nodeType":"147","messageId":"148","endLine":151,"endColumn":41},{"ruleId":"145","severity":1,"message":"149","line":152,"column":57,"nodeType":"147","messageId":"148","endLine":152,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":153,"column":21,"nodeType":"147","messageId":"148","endLine":153,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":155,"column":59,"nodeType":"147","messageId":"148","endLine":155,"endColumn":61},{"ruleId":"145","severity":1,"message":"149","line":156,"column":23,"nodeType":"147","messageId":"148","endLine":156,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":159,"column":57,"nodeType":"147","messageId":"148","endLine":159,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":160,"column":21,"nodeType":"147","messageId":"148","endLine":160,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":162,"column":57,"nodeType":"147","messageId":"148","endLine":162,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":163,"column":21,"nodeType":"147","messageId":"148","endLine":163,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":167,"column":32,"nodeType":"147","messageId":"148","endLine":167,"endColumn":34},{"ruleId":"145","severity":1,"message":"149","line":168,"column":57,"nodeType":"147","messageId":"148","endLine":168,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":169,"column":21,"nodeType":"147","messageId":"148","endLine":169,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":171,"column":59,"nodeType":"147","messageId":"148","endLine":171,"endColumn":61},{"ruleId":"145","severity":1,"message":"149","line":172,"column":23,"nodeType":"147","messageId":"148","endLine":172,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":175,"column":57,"nodeType":"147","messageId":"148","endLine":175,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":176,"column":21,"nodeType":"147","messageId":"148","endLine":176,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":178,"column":57,"nodeType":"147","messageId":"148","endLine":178,"endColumn":59},{"ruleId":"145","severity":1,"message":"149","line":179,"column":21,"nodeType":"147","messageId":"148","endLine":179,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":184,"column":23,"nodeType":"147","messageId":"148","endLine":184,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":185,"column":51,"nodeType":"147","messageId":"148","endLine":185,"endColumn":53},{"ruleId":"145","severity":1,"message":"149","line":185,"column":78,"nodeType":"147","messageId":"148","endLine":185,"endColumn":80},{"ruleId":"145","severity":1,"message":"149","line":202,"column":55,"nodeType":"147","messageId":"148","endLine":202,"endColumn":57},{"ruleId":"137","severity":1,"message":"163","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"168","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":29,"column":27,"nodeType":"147","messageId":"148","endLine":29,"endColumn":29},{"ruleId":"137","severity":1,"message":"168","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"153","severity":1,"message":"169","line":10,"column":6,"nodeType":"155","endLine":10,"endColumn":22,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"149","line":20,"column":124,"nodeType":"147","messageId":"148","endLine":20,"endColumn":126},{"ruleId":"145","severity":1,"message":"149","line":20,"column":272,"nodeType":"147","messageId":"148","endLine":20,"endColumn":274},{"ruleId":"145","severity":1,"message":"149","line":12,"column":53,"nodeType":"147","messageId":"148","endLine":12,"endColumn":55},{"ruleId":"145","severity":1,"message":"149","line":31,"column":52,"nodeType":"147","messageId":"148","endLine":31,"endColumn":54},{"ruleId":"145","severity":1,"message":"149","line":31,"column":79,"nodeType":"147","messageId":"148","endLine":31,"endColumn":81},{"ruleId":"145","severity":1,"message":"149","line":37,"column":19,"nodeType":"147","messageId":"148","endLine":37,"endColumn":21},{"ruleId":"145","severity":1,"message":"149","line":38,"column":18,"nodeType":"147","messageId":"148","endLine":38,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":39,"column":18,"nodeType":"147","messageId":"148","endLine":39,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":40,"column":18,"nodeType":"147","messageId":"148","endLine":40,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":53,"column":18,"nodeType":"147","messageId":"148","endLine":53,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":12,"column":23,"nodeType":"147","messageId":"148","endLine":12,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":14,"column":43,"nodeType":"147","messageId":"148","endLine":14,"endColumn":45},{"ruleId":"145","severity":1,"message":"149","line":21,"column":30,"nodeType":"147","messageId":"148","endLine":21,"endColumn":32},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'inRoom' is assigned a value but never used.","'setInRoom' is assigned a value but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'setUsername' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'setHost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'changeKing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'generateQr' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["174"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["175"],"'passes' is assigned a value but never used.",["176"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props.passesFails'. Either include it or remove the dependency array. If 'setPassesFails' needs the current value of 'props.passesFails', you can also switch to useReducer instead of useState and read 'props.passesFails' in the reducer.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [room, username]",{"range":"188","text":"189"},"Update the dependencies array to be: [generateQr, props]",{"range":"190","text":"191"},"Update the dependencies array to be: [props, props.displayVote, props.voting]",{"range":"192","text":"193"},"Update the dependencies array to be: [props, props.passesFails]",{"range":"194","text":"195"},"Update the dependencies array to be: [props.passFail, props.passesFails]",{"range":"196","text":"197"},[2587,2589],"[room, username]",[618,620],"[generateQr, props]",[993,1026],"[props, props.displayVote, props.voting]",[2088,2107],"[props, props.passesFails]",[277,293],"[props.passFail, props.passesFails]"]