[{"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js":"1","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx":"3","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx":"4","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx":"5","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx":"6","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx":"7","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx":"8","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx":"9","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx":"10"},{"size":547,"mtime":1611851486428,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1285,"mtime":1611861265281,"results":"14","hashOfConfig":"12"},{"size":1626,"mtime":1611863719026,"results":"15","hashOfConfig":"12"},{"size":5308,"mtime":1623807506786,"results":"16","hashOfConfig":"12"},{"size":1625,"mtime":1611863747250,"results":"17","hashOfConfig":"12"},{"size":2104,"mtime":1612311445125,"results":"18","hashOfConfig":"12"},{"size":4520,"mtime":1623806487191,"results":"19","hashOfConfig":"12"},{"size":1140,"mtime":1612311513911,"results":"20","hashOfConfig":"12"},{"size":795,"mtime":1623803377545,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1c5qjdc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js",[],["49","50"],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx",["51","52","53","54"],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport queryString from \"querystring\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Game from \"./Components/Game/Game\";\nimport Join from \"./Components/Join/Join\";\nimport Host from \"./Components/Host/Host\";\n\nconst App = () => {\n  // const socketRef = useRef();\n  const [inRoom, setInRoom] = useState(false);\n\n  useEffect(() => {\n    // socket = io(\"avalonconnect-server.herokuapp.com\"); //! CHANGE BEFORE PUSHING\n    // socket = io(\"localhost:3333\");\n    // socket.emit(\"here\");\n    // console.log(\"SOCKET:\", socket);\n    // socket.on(\"count\", (count) => {\n    //   setCount(count);\n    // });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/join\">\n            <Join />\n          </Route>\n          <Route exact path=\"/host\">\n            <Host />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/join\" />\n          </Route>\n          <Route path=\"/game/:username/:room/:host\">\n            <Game />\n          </Route>\n          <Route>\n            <Redirect to=\"/join\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx",["55","56"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"joinWrapper\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Join a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"joinUsername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter name...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            GAME CODE\r\n            <Input\r\n              className=\"joinRoom\"\r\n              value={room}\r\n              onChange={(e) => setRoom(e.target.value)}\r\n              placeholder=\"Enter game code...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"joinGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"GAME CODE MUST BE 4 DIGITS!!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/false`}\r\n        >\r\n          JOIN\r\n        </Link>\r\n      </Form>\r\n      <Link to=\"/host\">host a game</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx",["57","58","59","60","61","62"],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx",["63","64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Host.css\";\r\n\r\nconst Host = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(makeid(4));\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Host a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"hostUsername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter name...\"\r\n              required\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"hostGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"Error!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/true`}\r\n        >\r\n          HOST\r\n        </Link>\r\n      </Form>\r\n      <Link to=\"/join\">join a game</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Host;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx",["66","67"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Waiting = (props) => {\r\n  const [percivalMorgana, setPercivalMorgana] = useState(true);\r\n  const [oberon, setOberon] = useState(true);\r\n\r\n  useEffect(() => {\r\n    props.socket.on(\"roomUsers\", ({ room, users }) => {\r\n      props.setUsers(users);\r\n    });\r\n  }, []);\r\n\r\n  const startGame = () => {\r\n    props.socket.emit(\"startGame\", {\r\n      percivalMorgana: percivalMorgana,\r\n      oberon: oberon,\r\n    });\r\n    props.changeRender(\"team\");\r\n    // props.setRollOpen\r\n  };\r\n\r\n  const handlePercivalMorganaClick = (e) => {\r\n    if (percivalMorgana) {\r\n      setPercivalMorgana(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setPercivalMorgana(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  const handleOberonClick = (e) => {\r\n    if (oberon) {\r\n      setOberon(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setOberon(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      <h1 class=\"room\">{props.room}</h1>\r\n      {props.host ? (\r\n        <h5 className=\"hosting\">you are hosting</h5>\r\n      ) : (\r\n        <h5>waiting for host to begin game...</h5>\r\n      )}\r\n      {props.users.map((user) => {\r\n        return (\r\n          <h2\r\n            style={{\r\n              color: `${props.socket.id == user.id ? \"blue\" : \"black\"}`,\r\n            }}\r\n          >\r\n            {user.username}\r\n          </h2>\r\n        );\r\n      })}\r\n      {props.host ? (\r\n        <>\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handlePercivalMorganaClick}\r\n          >\r\n            Percival/Morgana\r\n          </Button>\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handleOberonClick}\r\n          >\r\n            Oberon\r\n          </Button>\r\n          <Button onClick={startGame}>START GAME</Button>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport LastRound from \"./LastRound\";\r\n\r\nconst Team = (props) => {\r\n  useEffect(() => {\r\n    if (\r\n      props.kingStarted &&\r\n      props.voting == false &&\r\n      props.displayVote == true\r\n    ) {\r\n      if (props.rejectedPeople.length >= props.acceptedPeople.length) {\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setDisplayVote(false);\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setKingStarted(false);\r\n        if (props.king.id == props.socket.id) {\r\n          props.nextKing();\r\n        }\r\n      }\r\n    }\r\n  }, [props.displayVote, props.voting]);\r\n\r\n  useEffect(() => {\r\n    console.log(`Here is the displayVote: ${props.displayVote}`);\r\n  }, [props.displayVote]);\r\n\r\n  const handleAccept = () => {\r\n    if (!props.displayVote) {\r\n      props.addToAccepted(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleReject = () => {\r\n    if (!props.displayVote) {\r\n      props.addToRejected(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const userInUsers = (user, users) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].id === user.id) {\r\n        return [true, i];\r\n      }\r\n    }\r\n    return [false, -1];\r\n  };\r\n\r\n  const callVote = () => {\r\n    props.socket.emit(\"callVote\");\r\n    // props.setVoting(true);\r\n    // props.setKingStarted(true);\r\n  };\r\n\r\n  const toggleOnTeam = (user) => {\r\n    if (props.socket.id === props.king.id && !props.voting) {\r\n      if (userInUsers(user, props.onTeam)[0]) {\r\n        props.changeOnTeam(\r\n          props.onTeam.filter((person) => person.id !== user.id)\r\n        );\r\n      } else if (\r\n        props.gameInfo.teams[props.currentMission - 1] > props.onTeam.length\r\n      ) {\r\n        props.changeOnTeam([...props.onTeam, user]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.king.id === props.socket.id ? (\r\n        <>\r\n          <h2>YOU ARE THE KING</h2>\r\n        </>\r\n      ) : (\r\n        <h2>{props.king.username} IS THE KING</h2>\r\n      )}\r\n      <h5>\r\n        {props.gameInfo.teams[props.currentMission - 1]} people on this team\r\n      </h5>\r\n      {props.users.map((user) => (\r\n        <h2\r\n          style={\r\n            userInUsers(user, props.onTeam)[0]\r\n              ? {\r\n                  backgroundColor: \"grey\",\r\n                  color: \"white\",\r\n                }\r\n              : {}\r\n          }\r\n          onClick={() => toggleOnTeam(user)}\r\n        >\r\n          {user.username}\r\n        </h2>\r\n      ))}\r\n      {props.gameInfo.teams[props.currentMission - 1] == props.onTeam.length &&\r\n      props.socket.id === props.king.id &&\r\n      !props.voting &&\r\n      !props.displayVote ? (\r\n        <Button onClick={callVote}>Call for a vote</Button>\r\n      ) : null}\r\n      {props.voting ? (\r\n        <>\r\n          <Button color=\"success\" onClick={handleAccept}>\r\n            ACCEPT\r\n          </Button>\r\n          <Button color=\"danger\" onClick={handleReject}>\r\n            REJECT\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n      {props.voting == true\r\n        ? props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n          ? \"You are accepting...\"\r\n          : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You are rejecting...\"\r\n          : null\r\n        : props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? \"You accepted\"\r\n        : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n            .length == 1\r\n        ? \"You rejected\"\r\n        : props.displayVote\r\n        ? \"You didn't vote\"\r\n        : null}\r\n      {props.displayVote ? (\r\n        <>\r\n          <h4>Accepted</h4>\r\n          {props.acceptedPeople.length > 0\r\n            ? props.acceptedPeople.map((person) => (\r\n                <p>{person.username.toUpperCase()}</p>\r\n              ))\r\n            : \"none\"}\r\n          <h4>Rejected</h4>\r\n          {props.rejectedPeople.length > 0\r\n            ? props.rejectedPeople.map((person) => (\r\n                <p>{person.username.toUpperCase()}</p>\r\n              ))\r\n            : \"none\"}\r\n        </>\r\n      ) : props.voting ? (\r\n        \"counting down...\"\r\n      ) : null}\r\n      <LastRound lastRound={props.lastRound} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx",["83","84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Roll = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        {props.roll === \"servant\"\r\n          ? \"You are a loyal servant of Arthur\"\r\n          : props.roll === \"percival\"\r\n          ? \"You are Percival\"\r\n          : props.roll === \"merlin\"\r\n          ? \"You are Merlin\"\r\n          : props.roll === \"minion\"\r\n          ? \"You are a minion of Mordred\"\r\n          : props.roll === \"morgana\"\r\n          ? \"You are Morgana\"\r\n          : props.roll === \"mordred\"\r\n          ? \"You are Mordred\"\r\n          : props.roll === \"oberon\"\r\n          ? \"You are Oberon\"\r\n          : null}\r\n      </h3>\r\n      <br />\r\n\r\n      {props.sees ? (\r\n        props.sees.length != 0 ? (\r\n          <>\r\n            <h4>you see:</h4>\r\n            <br />\r\n          </>\r\n        ) : null\r\n      ) : null}\r\n\r\n      {props.sees\r\n        ? props.sees.map((person) => (\r\n            <>\r\n              <h4>{person}</h4>\r\n              <br />\r\n            </>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roll;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"94","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":7},{"ruleId":"90","severity":1,"message":"95","line":18,"column":10,"nodeType":"92","messageId":"93","endLine":18,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":18,"column":18,"nodeType":"92","messageId":"93","endLine":18,"endColumn":27},{"ruleId":"90","severity":1,"message":"97","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":45,"column":29,"nodeType":"100","messageId":"101","endLine":45,"endColumn":31},{"ruleId":"90","severity":1,"message":"102","line":14,"column":20,"nodeType":"92","messageId":"93","endLine":14,"endColumn":31},{"ruleId":"90","severity":1,"message":"103","line":15,"column":16,"nodeType":"92","messageId":"93","endLine":15,"endColumn":23},{"ruleId":"90","severity":1,"message":"104","line":18,"column":16,"nodeType":"92","messageId":"93","endLine":18,"endColumn":23},{"ruleId":"90","severity":1,"message":"105","line":27,"column":26,"nodeType":"92","messageId":"93","endLine":27,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":61,"column":6,"nodeType":"108","endLine":61,"endColumn":8,"suggestions":"109"},{"ruleId":"90","severity":1,"message":"110","line":110,"column":9,"nodeType":"92","messageId":"93","endLine":110,"endColumn":19},{"ruleId":"90","severity":1,"message":"97","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"103","line":8,"column":16,"nodeType":"92","messageId":"93","endLine":8,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":47,"column":29,"nodeType":"100","messageId":"101","endLine":47,"endColumn":31},{"ruleId":"106","severity":1,"message":"111","line":12,"column":6,"nodeType":"108","endLine":12,"endColumn":8,"suggestions":"112"},{"ruleId":"98","severity":1,"message":"99","line":55,"column":41,"nodeType":"100","messageId":"101","endLine":55,"endColumn":43},{"ruleId":"90","severity":1,"message":"113","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":10,"column":20,"nodeType":"100","messageId":"101","endLine":10,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":11,"column":25,"nodeType":"100","messageId":"101","endLine":11,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":18,"column":27,"nodeType":"100","messageId":"101","endLine":18,"endColumn":29},{"ruleId":"106","severity":1,"message":"111","line":23,"column":6,"nodeType":"108","endLine":23,"endColumn":39,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"99","line":101,"column":55,"nodeType":"100","messageId":"101","endLine":101,"endColumn":57},{"ruleId":"98","severity":1,"message":"99","line":117,"column":21,"nodeType":"100","messageId":"101","endLine":117,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":118,"column":57,"nodeType":"100","messageId":"101","endLine":118,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":119,"column":21,"nodeType":"100","messageId":"101","endLine":119,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":121,"column":59,"nodeType":"100","messageId":"101","endLine":121,"endColumn":61},{"ruleId":"98","severity":1,"message":"99","line":122,"column":23,"nodeType":"100","messageId":"101","endLine":122,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":125,"column":57,"nodeType":"100","messageId":"101","endLine":125,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":126,"column":21,"nodeType":"100","messageId":"101","endLine":126,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":128,"column":57,"nodeType":"100","messageId":"101","endLine":128,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":129,"column":21,"nodeType":"100","messageId":"101","endLine":129,"endColumn":23},{"ruleId":"90","severity":1,"message":"113","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"115","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"116","line":29,"column":27,"nodeType":"100","messageId":"101","endLine":29,"endColumn":29},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'inRoom' is assigned a value but never used.","'setInRoom' is assigned a value but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setUsername' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'setHost' is assigned a value but never used.","'setCurrentMission' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'changeKing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["120"],"'useState' is defined but never used.",["121"],"'Button' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [room, username]",{"range":"128","text":"129"},"Update the dependencies array to be: [props]",{"range":"130","text":"131"},"Update the dependencies array to be: [props, props.displayVote, props.voting]",{"range":"132","text":"133"},[2240,2242],"[room, username]",[359,361],"[props]",[668,701],"[props, props.displayVote, props.voting]"]