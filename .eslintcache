[{"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js":"1","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx":"3","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx":"4","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx":"5","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx":"6","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx":"7","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx":"8","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx":"9","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx":"10","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\PassFail.jsx":"11","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Missions.jsx":"12","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Results.jsx":"13","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Merlin.jsx":"14","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Home.jsx":"15","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Settings.jsx":"16","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\QR.jsx":"17","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Loading.jsx":"18","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\UseUnsavedChangesWarning.jsx":"19"},{"size":547,"mtime":1611851486428,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1532,"mtime":1624926586967,"results":"23","hashOfConfig":"21"},{"size":2259,"mtime":1624934289075,"results":"24","hashOfConfig":"21"},{"size":8263,"mtime":1625346764442,"results":"25","hashOfConfig":"21"},{"size":1878,"mtime":1624931006634,"results":"26","hashOfConfig":"21"},{"size":3351,"mtime":1624934769941,"results":"27","hashOfConfig":"21"},{"size":7543,"mtime":1624833294588,"results":"28","hashOfConfig":"21"},{"size":3325,"mtime":1624668956338,"results":"29","hashOfConfig":"21"},{"size":1739,"mtime":1624888678553,"results":"30","hashOfConfig":"21"},{"size":1763,"mtime":1624587856512,"results":"31","hashOfConfig":"21"},{"size":849,"mtime":1624412827236,"results":"32","hashOfConfig":"21"},{"size":2142,"mtime":1624842645847,"results":"33","hashOfConfig":"21"},{"size":2844,"mtime":1624841641856,"results":"34","hashOfConfig":"21"},{"size":671,"mtime":1624931041085,"results":"35","hashOfConfig":"21"},{"size":1632,"mtime":1624934389357,"results":"36","hashOfConfig":"21"},{"size":635,"mtime":1624935286546,"results":"37","hashOfConfig":"21"},{"size":273,"mtime":1624999342866,"results":"38","hashOfConfig":"21"},{"size":565,"mtime":1625015234393,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"keixq8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\index.js",[],["94","95"],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\App.jsx",["96","97","98","99"],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport queryString from \"querystring\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Home from \"./Components/Game/Home\";\nimport Settings from \"./Components/Game/Settings\";\nimport Game from \"./Components/Game/Game\";\nimport Join from \"./Components/Join/Join\";\nimport Host from \"./Components/Host/Host\";\n\nconst App = () => {\n  // const socketRef = useRef();\n  const [inRoom, setInRoom] = useState(false);\n\n  useEffect(() => {\n    // socket = io(\"avalonconnect-server.herokuapp.com\"); //! CHANGE BEFORE PUSHING\n    // socket = io(\"localhost:3333\");\n    // socket.emit(\"here\");\n    // console.log(\"SOCKET:\", socket);\n    // socket.on(\"count\", (count) => {\n    //   setCount(count);\n    // });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/join/:room\">\n            <Join />\n          </Route>\n          <Route exact path=\"/join\">\n            <Join />\n          </Route>\n          <Route exact path=\"/host\">\n            <Host />\n          </Route>\n          <Route exact path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/game/:username/:room/:host\">\n            <Game />\n          </Route>\n          <Route>\n            <Redirect to=\"/join\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Join\\Join.jsx",["100","101","102","103","104"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(useParams().room);\r\n  const [enterRoom, setEnterRoom] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"username\") != \"\") {\r\n      setUsername(window.localStorage.getItem(\"username\"));\r\n    }\r\n    if (\r\n      room &&\r\n      localStorage.getItem(\"username\") != \"\" &&\r\n      localStorage.getItem(\"enterGame\") == \"true\"\r\n    ) {\r\n      setEnterRoom(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {enterRoom ? <Redirect to={`/game/${username}/${room}/false`} /> : null}\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Join a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"joinUsername\"\r\n              value={username}\r\n              onChange={handleNameChange}\r\n              placeholder=\"Enter name...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            GAME CODE\r\n            <Input\r\n              className=\"joinRoom\"\r\n              value={room}\r\n              onChange={(e) => setRoom(e.target.value)}\r\n              placeholder=\"Enter game code...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"joinGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"GAME CODE MUST BE 4 DIGITS!!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/false`}\r\n        >\r\n          Join\r\n        </Link>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Game.jsx",["105","106","107","108","109","110","111","112","113","114","115"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Game.css\";\r\n\r\nimport Waiting from \"./GameComponents/Waiting\";\r\nimport Team from \"./GameComponents/Team\";\r\nimport Roll from \"./GameComponents/Roll\";\r\nimport Results from \"./GameComponents/Results\";\r\nimport Merlin from \"./GameComponents/Merlin\";\r\nimport Loading from \"../Game/Loading\";\r\n\r\nimport UseUnsavedChangesWarning from \"../Game/UseUnsavedChangesWarning\";\r\n\r\nlet socket;\r\n\r\nconst Game = () => {\r\n  const [username, setUsername] = useState(useParams().username.toUpperCase());\r\n  const [room, setRoom] = useState(useParams().room.toUpperCase());\r\n  const [users, setUsers] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [rollOpen, setRollOpen] = useState(true);\r\n  const [rollClosed, setRollClosed] = useState(false);\r\n  const [host, setHost] = useState(useParams().host === \"true\" ? true : false);\r\n  const [render, setRender] = useState(\"waiting\");\r\n  const [roll, setRoll] = useState();\r\n  const [sees, setSees] = useState();\r\n  const [king, setKing] = useState();\r\n  const [onTeam, setOnTeam] = useState([]);\r\n  const [acceptedPeople, setAcceptedPeople] = useState([]);\r\n  const [rejectedPeople, setRejectedPeople] = useState([]);\r\n  const [gameInfo, setGameInfo] = useState();\r\n  const [currentMission, setCurrentMission] = useState(1);\r\n  const [missions, setMissions] = useState([]);\r\n  const [voting, setVoting] = useState(false);\r\n  const [displayVote, setDisplayVote] = useState(false);\r\n  const [kingStarted, setKingStarted] = useState(false);\r\n  const [passFail, setPassFail] = useState(false);\r\n  const [passesFails, setPassesFails] = useState([]);\r\n  const [lastRound, setLastRound] = useState();\r\n  const [merlinCorrect, setMerlinCorrect] = useState();\r\n  const [badPeople, setBadPeople] = useState([]);\r\n  const [goodPeople, setGoodPeople] = useState([]);\r\n  const [chosenOne, setChosenOne] = useState();\r\n\r\n  const [Prompt, setDirty, setClean] = UseUnsavedChangesWarning();\r\n\r\n  useEffect(() => {\r\n    socket = io(\"avalonconnect-server.herokuapp.com\"); //! FOR HEROKU\r\n    // socket = io(\"localhost:3333\"); //! FOR LOCAL\r\n    console.log(\"SOCKET\", socket);\r\n    setDirty();\r\n\r\n    //! joining the game room\r\n    socket.emit(\"joinRoom\", { room, username });\r\n\r\n    socket.on(\"roomUsers\", ({ room, users }) => {\r\n      console.log(\"new users\", users);\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on(\"rearrange\", setUsers);\r\n\r\n    socket.on(\"characters\", (chars) => {\r\n      setCharacters(chars);\r\n      console.log(chars);\r\n    });\r\n\r\n    socket.on(\"newRender\", newRender);\r\n    socket.on(\"newKing\", newKing);\r\n    socket.on(\"newOnTeam\", newOnTeam);\r\n    socket.on(\"newAcceptedRejected\", newAcceptedRejected);\r\n    socket.on(\"newPassFail\", setPassesFails);\r\n    socket.on(\"newPassFailSingle\", setPassFail);\r\n\r\n    socket.on(\"showVote\", showVote);\r\n\r\n    socket.on(\"charReveal\", ({ roll, sees }) => {\r\n      setSees(sees);\r\n      setRoll(roll);\r\n      console.log(\"roll, sees:\", roll, sees);\r\n    });\r\n    socket.on(\"gameInfo\", setGameInfo);\r\n    socket.on(\"callVote\", callVote);\r\n    socket.on(\"voting\", setVoting);\r\n    socket.on(\"lastRound\", setLastRound);\r\n    socket.on(\"missions\", setMissions);\r\n    socket.on(\"currentMission\", setCurrentMission);\r\n    socket.on(\"badPeople\", setBadPeople);\r\n    socket.on(\"goodPeople\", setGoodPeople);\r\n    socket.on(\"chosenOne\", setChosenOne);\r\n    socket.on(\"merlinCorrect\", setMerlinCorrect);\r\n\r\n    document.body.onbeforeunload = \"return pageUnload()\";\r\n  }, []);\r\n\r\n  const callVote = () => {\r\n    setKingStarted(true);\r\n    setVoting(true);\r\n  };\r\n\r\n  const rearrange = (newUsers) => {\r\n    socket.emit(\"rearrange\", newUsers);\r\n  };\r\n\r\n  const newRender = (newR) => {\r\n    setRender(newR);\r\n  };\r\n\r\n  const newOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n  };\r\n\r\n  const changeOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n    socket.emit(\"changeOnTeam\", newO);\r\n  };\r\n\r\n  const newPassFail = (newPF) => {\r\n    socket.emit(newPF);\r\n  };\r\n\r\n  const newAcceptedRejected = (newAR) => {\r\n    setAcceptedPeople(newAR.accepted);\r\n    setRejectedPeople(newAR.rejected);\r\n  };\r\n\r\n  const showVote = (show) => {\r\n    setDisplayVote(show);\r\n  };\r\n\r\n  const addToRejected = (newR) => {\r\n    // setRejectedPeople([...rejectedPeople, newR]);\r\n    socket.emit(\"addToRejected\", newR);\r\n  };\r\n\r\n  const addToAccepted = (newA) => {\r\n    // setAcceptedPeople([...acceptedPeople, newA]);\r\n    socket.emit(\"addToAccepted\", newA);\r\n  };\r\n\r\n  const addToPass = (person) => {\r\n    socket.emit(\"addToPass\", person);\r\n  };\r\n\r\n  const addToFail = (person) => {\r\n    socket.emit(\"addToFail\", person);\r\n  };\r\n\r\n  const addMission = (passed, mission) => {\r\n    socket.emit(\"mission\", {\r\n      passed,\r\n      mission,\r\n    });\r\n  };\r\n\r\n  const changeRender = (newR) => {\r\n    setRender(newR);\r\n    socket.emit(\"changeRender\", newR);\r\n  };\r\n\r\n  const newKing = (newK) => {\r\n    setKing(newK);\r\n    console.log(`The new king is ${newK}`);\r\n  };\r\n\r\n  const changeKing = (newK) => {\r\n    setKing(newK);\r\n    socket.emit(\"changeKing\", newK);\r\n  };\r\n\r\n  const nextKing = () => {\r\n    socket.emit(\"lastRound\", {\r\n      king: king,\r\n      onTeam: onTeam,\r\n      rejectedPeople: rejectedPeople,\r\n      acceptedPeople: acceptedPeople,\r\n    });\r\n    socket.emit(\"nextKing\");\r\n  };\r\n\r\n  const toggleRoll = () => {\r\n    setRollOpen(!rollOpen);\r\n  };\r\n\r\n  function pageUnload() {\r\n    return \"The data on this page will be lost if you leave\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      {render !== \"waiting\" && render !== \"results\" ? (\r\n        <>\r\n          <h2>\r\n            <Roll\r\n              newRender={newRender}\r\n              roll={roll}\r\n              sees={sees}\r\n              socket={socket}\r\n              rollOpen={rollOpen}\r\n              setRollOpen={setRollOpen}\r\n              username={username}\r\n              setRollClosed={setRollClosed}\r\n              characters={characters}\r\n            />\r\n          </h2>\r\n        </>\r\n      ) : null}\r\n      {render === \"waiting\" ? (\r\n        socket && users.length > 0 ? (\r\n          <Waiting\r\n            changeRender={changeRender}\r\n            host={host}\r\n            room={room}\r\n            users={users}\r\n            setUsers={setUsers}\r\n            socket={socket}\r\n            setRollOpen={setRollOpen}\r\n            rearrange={rearrange}\r\n          />\r\n        ) : (\r\n          <Loading />\r\n        )\r\n      ) : render === \"team\" && rollClosed ? (\r\n        <Team\r\n          onTeam={onTeam}\r\n          changeOnTeam={changeOnTeam}\r\n          rejectedPeople={rejectedPeople}\r\n          addToRejected={addToRejected}\r\n          acceptedPeople={acceptedPeople}\r\n          addToAccepted={addToAccepted}\r\n          king={king}\r\n          socket={socket}\r\n          users={users}\r\n          gameInfo={gameInfo}\r\n          currentMission={currentMission}\r\n          voting={voting}\r\n          setVoting={setVoting}\r\n          displayVote={displayVote}\r\n          setDisplayVote={setDisplayVote}\r\n          nextKing={nextKing}\r\n          kingStarted={kingStarted}\r\n          setKingStarted={setKingStarted}\r\n          lastRound={lastRound}\r\n          setLastRound={setLastRound}\r\n          passFail={passFail}\r\n          setPassFail={setPassFail}\r\n          passesFails={passesFails}\r\n          setPassesFails={setPassesFails}\r\n          roll={roll}\r\n          addToPass={addToPass}\r\n          addToFail={addToFail}\r\n          addMission={addMission}\r\n          missions={missions}\r\n          newPassFail={newPassFail}\r\n        />\r\n      ) : render === \"roll\" ? (\r\n        <Roll newRender={newRender} roll={roll} sees={sees} socket={socket} />\r\n      ) : render == \"merlin\" ? (\r\n        <Merlin\r\n          users={users}\r\n          socket={socket}\r\n          setMerlinCorrect={setMerlinCorrect}\r\n          chosenOne={chosenOne}\r\n          badPeople={badPeople}\r\n          goodPeople={goodPeople}\r\n        />\r\n      ) : render == \"results\" ? (\r\n        <Results\r\n          users={users}\r\n          missions={missions}\r\n          merlinCorrect={merlinCorrect}\r\n        />\r\n      ) : null}\r\n      {Prompt}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Host\\Host.jsx",["116","117","118","119"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Host.css\";\r\n\r\nconst Host = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(makeid(4));\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"username\") != \"\") {\r\n      setUsername(window.localStorage.getItem(\"username\"));\r\n    }\r\n  }, []);\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Host a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"hostUsername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter name...\"\r\n              required\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"hostGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"Error!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/true`}\r\n        >\r\n          Host\r\n        </Link>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Host;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Waiting.jsx",["120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport qrCode from \"qrcode\";\r\n\r\nimport QR from \"./QR\";\r\n\r\nconst Waiting = (props) => {\r\n  const [percivalMorgana, setPercivalMorgana] = useState(true);\r\n  const [oberon, setOberon] = useState(true);\r\n  const [qrUrl, setQrUrl] = useState(\"\");\r\n\r\n  function array_move(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr; // for testing\r\n  }\r\n\r\n  const moveUp = (index) => {\r\n    props.rearrange(array_move(props.users, index, index + 1));\r\n  };\r\n\r\n  const moveDown = (index) => {\r\n    props.rearrange(array_move(props.users, index, index - 1));\r\n  };\r\n\r\n  const generateQr = async () => {\r\n    const response = await qrCode.toDataURL(\r\n      `https://avalonconnect.herokuapp.com/join/${props.room}`\r\n    );\r\n    setQrUrl(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.socket.on(\"roomUsers\", ({ room, users }) => {\r\n      props.setUsers(users);\r\n    });\r\n    generateQr();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(qrUrl);\r\n  }, [qrUrl]);\r\n\r\n  const startGame = () => {\r\n    props.socket.emit(\"startGame\", {\r\n      percivalMorgana: percivalMorgana,\r\n      oberon: oberon,\r\n      usersP: props.users,\r\n    });\r\n    props.changeRender(\"team\");\r\n    // props.setRollOpen\r\n  };\r\n\r\n  const handlePercivalMorganaClick = (e) => {\r\n    if (percivalMorgana) {\r\n      setPercivalMorgana(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setPercivalMorgana(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  const handleOberonClick = (e) => {\r\n    if (oberon) {\r\n      setOberon(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setOberon(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      <h1 class=\"room\">{props.room}</h1>\r\n      {props.host ? (\r\n        <h5 className=\"hosting\">you are hosting</h5>\r\n      ) : (\r\n        <h5>waiting for host to start game...</h5>\r\n      )}\r\n      {props.users.map((user, index) => {\r\n        return (\r\n          <h3\r\n            style={{\r\n              color: `${props.socket.id == user.id ? \"#007bff\" : \"black\"}`,\r\n            }}\r\n          >\r\n            {user.username}{\" \"}\r\n            {props.host ? (\r\n              <span>\r\n                {index > 0 ? (\r\n                  <Button onClick={() => moveDown(index)}>^</Button>\r\n                ) : null}\r\n              </span>\r\n            ) : null}\r\n          </h3>\r\n        );\r\n      })}\r\n      {props.host ? (\r\n        <>\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handlePercivalMorganaClick}\r\n          >\r\n            Percival/Morgana\r\n          </Button>{\" \"}\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handleOberonClick}\r\n          >\r\n            Oberon\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <Button onClick={startGame}>START GAME</Button>\r\n          <br />\r\n        </>\r\n      ) : null}\r\n      {qrUrl ? <QR src={qrUrl} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Team.jsx",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport LastRound from \"./LastRound\";\r\nimport PassFail from \"./PassFail\";\r\nimport Missions from \"./Missions\";\r\n\r\nconst Team = (props) => {\r\n  useEffect(() => {\r\n    if (\r\n      props.kingStarted &&\r\n      props.voting == false &&\r\n      props.displayVote == true\r\n    ) {\r\n      if (props.rejectedPeople.length >= props.acceptedPeople.length) {\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setDisplayVote(false);\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setKingStarted(false);\r\n        if (props.king.id == props.socket.id) {\r\n          props.nextKing();\r\n        }\r\n      } else {\r\n        props.setPassFail(true);\r\n        props.setLastRound({\r\n          king: props.king,\r\n          onTeam: props.onTeam,\r\n          rejectedPeople: props.rejectedPeople,\r\n          acceptedPeople: props.acceptedPeople,\r\n        });\r\n      }\r\n    }\r\n  }, [props.displayVote, props.voting]);\r\n\r\n  useEffect(() => {\r\n    console.log(`Here is the displayVote: ${props.displayVote}`);\r\n  }, [props.displayVote]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.onTeam.length > 0 &&\r\n      props.passesFails.length == props.onTeam.length &&\r\n      props.king.id == props.socket.id\r\n    ) {\r\n      let passes = 0;\r\n      let fails = 0;\r\n      let passed;\r\n      for (let i = 0; i < props.passesFails.length; i++) {\r\n        if (props.passesFails[i]) {\r\n          passes++;\r\n        } else {\r\n          fails++;\r\n        }\r\n      }\r\n      if (props.gameInfo.twoFails && props.currentMission == 4) {\r\n        if (fails < 2) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      } else {\r\n        if (fails == 0) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      }\r\n      props.addMission(passed, props.currentMission);\r\n      //! Left off here\r\n      props.nextKing();\r\n      // props.newPassFail(false);\r\n      console.log(\"addMission\", passed, props.currentMission);\r\n    }\r\n  }, [props.passesFails]);\r\n\r\n  const handleAccept = () => {\r\n    if (!props.displayVote) {\r\n      props.addToAccepted(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleReject = () => {\r\n    if (!props.displayVote) {\r\n      props.addToRejected(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const userInUsers = (user, users) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].id === user.id) {\r\n        return [true, i];\r\n      }\r\n    }\r\n    return [false, -1];\r\n  };\r\n\r\n  const callVote = () => {\r\n    props.socket.emit(\"callVote\");\r\n    // props.setVoting(true);\r\n    // props.setKingStarted(true);\r\n  };\r\n\r\n  const toggleOnTeam = (user) => {\r\n    if (props.socket.id === props.king.id && !props.voting && !props.passFail) {\r\n      if (userInUsers(user, props.onTeam)[0]) {\r\n        props.changeOnTeam(\r\n          props.onTeam.filter((person) => person.id !== user.id)\r\n        );\r\n      } else if (\r\n        props.gameInfo.teams[props.currentMission - 1] > props.onTeam.length\r\n      ) {\r\n        props.changeOnTeam([...props.onTeam, user]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.king.id === props.socket.id ? (\r\n        <>\r\n          <h2 style={{ color: \"#007bff\" }}>YOU ARE THE KING</h2>\r\n        </>\r\n      ) : (\r\n        <h2>{props.king.username} IS THE KING</h2>\r\n      )}\r\n      <Missions\r\n        currentMission={props.currentMission}\r\n        missions={props.missions}\r\n        gameInfo={props.gameInfo}\r\n      />\r\n      {props.gameInfo.twoFails && props.currentMission == 4 ? (\r\n        <h5 style={{ color: \"#dc3545\" }}>\r\n          This mission requires 2 fails to fail\r\n        </h5>\r\n      ) : null}\r\n      {props.users.map((user) => (\r\n        <h3\r\n          style={\r\n            userInUsers(user, props.onTeam)[0]\r\n              ? user.id == props.socket.id\r\n                ? {\r\n                    backgroundColor: \"#007bff\",\r\n                    color: \"white\",\r\n                  }\r\n                : {\r\n                    backgroundColor: \"#6c757d\",\r\n                    color: \"white\",\r\n                  }\r\n              : user.id == props.socket.id\r\n              ? {\r\n                  color: \"#007bff\",\r\n                }\r\n              : {}\r\n          }\r\n          onClick={() => toggleOnTeam(user)}\r\n        >\r\n          {user.username}\r\n        </h3>\r\n      ))}\r\n      <br />\r\n      <h5\r\n        style={{\r\n          color:\r\n            props.voting == true\r\n              ? props.acceptedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n                ? \"#218838\"\r\n                : props.rejectedPeople.filter(\r\n                    (item) => item.id == props.socket.id\r\n                  ).length == 1\r\n                ? \"#dc3545\"\r\n                : null\r\n              : props.acceptedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n              ? \"#218838\"\r\n              : props.rejectedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n              ? \"#dc3545\"\r\n              : props.displayVote\r\n              ? \"#ffc107\"\r\n              : null,\r\n        }}\r\n      >\r\n        {props.voting == true\r\n          ? props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n            ? \"You are approving...\"\r\n            : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n                .length == 1\r\n            ? \"You are rejecting...\"\r\n            : null\r\n          : props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You approved\"\r\n          : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You rejected\"\r\n          : props.displayVote\r\n          ? \"You didn't vote\"\r\n          : null}\r\n      </h5>\r\n      {props.passFail == true ? (\r\n        props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n        1 ? (\r\n          <h5>You are on the team</h5>\r\n        ) : (\r\n          <h5>Waiting for team to vote...</h5>\r\n        )\r\n      ) : null}\r\n      {props.passFail ? (\r\n        <PassFail\r\n          onTeam={props.onTeam}\r\n          roll={props.roll}\r\n          passFail={props.passFail}\r\n          socket={props.socket}\r\n          users={props.users}\r\n          addToPass={props.addToPass}\r\n          addToFail={props.addToFail}\r\n        />\r\n      ) : null}\r\n      {props.gameInfo.teams[props.currentMission - 1] == props.onTeam.length &&\r\n      props.socket.id === props.king.id &&\r\n      !props.voting &&\r\n      !props.displayVote ? (\r\n        <Button onClick={callVote}>Call for a vote</Button>\r\n      ) : null}\r\n      {props.voting ? (\r\n        <>\r\n          <Button color=\"success\" onClick={handleAccept}>\r\n            APPROVE\r\n          </Button>{\" \"}\r\n          <Button color=\"danger\" onClick={handleReject}>\r\n            REJECT\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n      <br />\r\n\r\n      <LastRound\r\n        lastRound={props.lastRound}\r\n        missions={props.missions}\r\n        currentMission={props.currentMission}\r\n        gameInfo={props.gameInfo}\r\n        passesFails={props.passesFails}\r\n        passFail={props.passFail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Roll.jsx",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"reactstrap\";\r\nimport \"./Roll.css\";\r\n\r\nconst Roll = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  const toggleIsOpen = () => {\r\n    props.setRollOpen(!props.rollOpen);\r\n    props.setRollClosed(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"primary\" onClick={toggleIsOpen}>\r\n        {props.username}\r\n      </Button>\r\n      <Modal isOpen={props.rollOpen}>\r\n        <div id=\"roll-div\">\r\n          <h3\r\n            style={{\r\n              color:\r\n                props.roll == \"merlin\" ||\r\n                props.roll == \"servant\" ||\r\n                props.roll == \"percival\"\r\n                  ? \"#218838\"\r\n                  : \"#dc3545\",\r\n            }}\r\n          >\r\n            {props.roll === \"servant\"\r\n              ? \"You are a loyal servant of Arthur\"\r\n              : props.roll === \"percival\"\r\n              ? \"You are Percival\"\r\n              : props.roll === \"merlin\"\r\n              ? \"You are Merlin\"\r\n              : props.roll === \"minion\"\r\n              ? \"You are a minion of Mordred\"\r\n              : props.roll === \"morgana\"\r\n              ? \"You are Morgana\"\r\n              : props.roll === \"mordred\"\r\n              ? \"You are Mordred\"\r\n              : props.roll === \"oberon\"\r\n              ? \"You are Oberon\"\r\n              : null}\r\n          </h3>\r\n          <br />\r\n\r\n          {props.sees ? (\r\n            props.sees.length != 0 ? (\r\n              <>\r\n                <h4>You see:</h4>\r\n                <br />\r\n              </>\r\n            ) : null\r\n          ) : null}\r\n\r\n          {props.sees\r\n            ? props.sees.map((person) => (\r\n                <>\r\n                  <h4>• {person}</h4>\r\n                  {/* <br /> */}\r\n                </>\r\n              ))\r\n            : null}\r\n          <br />\r\n          <h4>Rolls:</h4>\r\n          <br />\r\n          {props.characters == undefined\r\n            ? null\r\n            : props.characters.map((character) => {\r\n                return (\r\n                  <h5\r\n                    style={{\r\n                      color:\r\n                        character == \"merlin\" ||\r\n                        character == \"servant\" ||\r\n                        character == \"percival\"\r\n                          ? \"#218838\"\r\n                          : \"#dc3545\",\r\n                    }}\r\n                  >\r\n                    {character == \"merlin\"\r\n                      ? \"Merlin\"\r\n                      : character == \"servant\"\r\n                      ? \"Loyal servant of Arthur\"\r\n                      : character == \"minion\"\r\n                      ? \"Minion of Mordred\"\r\n                      : character == \"percival\"\r\n                      ? \"Percival\"\r\n                      : character == \"morgana\"\r\n                      ? \"Morgana\"\r\n                      : character == \"mordred\"\r\n                      ? \"Mordred\"\r\n                      : character == \"oberon\"\r\n                      ? \"Oberon\"\r\n                      : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n                  </h5>\r\n                );\r\n              })}\r\n          <br />\r\n          <Button color=\"success\" onClick={toggleIsOpen}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roll;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\LastRound.jsx",["175","176","177","178"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst LastRound = (props) => {\r\n  const [passesFails, setPassesFails] = useState([]);\r\n  useEffect(() => {\r\n    if (!props.passFail) {\r\n      setPassesFails(props.passesFails);\r\n    }\r\n  }, [props.passFail]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {props.lastRound ? (\r\n        <>\r\n          <h5>\r\n            {passesFails.length > 0\r\n              ? `${\r\n                  passesFails.includes(true)\r\n                    ? passesFails.filter((item) => item).length\r\n                    : 0\r\n                } ${\r\n                  passesFails.filter((item) => item).length == 1\r\n                    ? \"pass\"\r\n                    : \"passes\"\r\n                }, ${\r\n                  passesFails.includes(false)\r\n                    ? passesFails.filter((item) => !item).length\r\n                    : 0\r\n                } ${\r\n                  passesFails.filter((item) => !item).length == 1\r\n                    ? \"fail\"\r\n                    : \"fails\"\r\n                }`\r\n              : null}\r\n          </h5>\r\n\r\n          <h4>The last king was {props.lastRound.king.username}</h4>\r\n          <h5>On the team:</h5>\r\n          {props.lastRound.onTeam.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Approved:</h5>\r\n          {props.lastRound.acceptedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Rejected:</h5>\r\n          {props.lastRound.rejectedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LastRound;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\PassFail.jsx",["179","180","181","182","183","184","185","186"],"import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst PassFail = (props) => {\r\n  /*\r\n    onTeam\r\n    passFail\r\n    socket\r\n    roll\r\n    */\r\n\r\n  const user = props.users.filter((user) => user.id == props.socket.id)[0];\r\n  const [isPassing, setIsPassing] = useState();\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n\r\n  const pass = () => {\r\n    setIsPassing(true);\r\n  };\r\n\r\n  const fail = () => {\r\n    setIsPassing(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    if (isPassing) {\r\n      props.addToPass(user);\r\n      setHasSubmitted(true);\r\n    } else {\r\n      props.addToFail(user);\r\n      setHasSubmitted(true);\r\n    }\r\n  };\r\n\r\n  return props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n    1 ? (\r\n    hasSubmitted ? (\r\n      <h5>Waiting for team to vote...</h5>\r\n    ) : (\r\n      <>\r\n        <Button onClick={pass} color=\"success\">\r\n          Pass\r\n        </Button>{\" \"}\r\n        {props.roll == \"morgana\" ||\r\n        props.roll == \"minion\" ||\r\n        props.roll == \"mordred\" ||\r\n        props.roll == \"oberon\" ? (\r\n          <>\r\n            <Button onClick={fail} color=\"danger\">\r\n              Fail\r\n            </Button>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button color=\"danger\" disabled={true}>\r\n              Fail\r\n            </Button>\r\n            <br />\r\n          </>\r\n        )}\r\n        {isPassing != undefined ? (\r\n          <Button\r\n            style={{ marginTop: \"0.5em\" }}\r\n            color={isPassing ? \"success\" : \"danger\"}\r\n            onClick={submit}\r\n          >\r\n            {isPassing ? \"Submit pass\" : \"Submit fail\"}\r\n          </Button>\r\n        ) : null}\r\n      </>\r\n    )\r\n  ) : null;\r\n};\r\n\r\nexport default PassFail;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Missions.jsx",["187","188","189"],"import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Missions = (props) => {\r\n  return (\r\n    <>\r\n      {[0, 1, 2, 3, 4].map((index) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              color={\r\n                index == props.currentMission - 1\r\n                  ? \"primary\"\r\n                  : props.missions[index] == undefined\r\n                  ? \"secondary\"\r\n                  : props.missions[index]\r\n                  ? \"success\"\r\n                  : \"danger\"\r\n              }\r\n              style={{\r\n                color: index == 3 && props.gameInfo.twoFails ? \"black\" : \"\",\r\n              }}\r\n            >\r\n              {props.gameInfo.teams[index]}\r\n            </Button>{\" \"}\r\n          </>\r\n        );\r\n      })}\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Missions;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Results.jsx",["190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { useState } from \"react\";\r\n\r\nconst Results = (props) => {\r\n  const [nums, setNums] = useState([\"1ST\", \"2ND\", \"3RD\", \"4TH\", \"5TH\"]);\r\n\r\n  return (\r\n    <>\r\n      {props.merlinCorrect != undefined ? (\r\n        props.merlinCorrect ? (\r\n          <>\r\n            <h2 style={{ color: \"#dc3545\" }}>Bad guys win!</h2>\r\n            <h5>Merlin was guessed correctly</h5>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2 style={{ color: \"#218838\" }}>Good guys win!</h2>\r\n            <h5>Merlin was guessed incorrectly</h5>\r\n          </>\r\n        )\r\n      ) : props.missions.filter((mission) => mission).length == 3 ? (\r\n        <h2 style={{ color: \"#218838\" }}>Good guys win!</h2>\r\n      ) : (\r\n        <h2 style={{ color: \"#dc3545\" }}>Bad guys win!</h2>\r\n      )}\r\n      <br />\r\n      <h3>Characters</h3>\r\n      {props.users.map((user) => {\r\n        return (\r\n          <h5\r\n            style={{\r\n              color:\r\n                user.roll == \"merlin\" ||\r\n                user.roll == \"servant\" ||\r\n                user.roll == \"percival\"\r\n                  ? \"#218838\"\r\n                  : \"#dc3545\",\r\n            }}\r\n          >\r\n            {user.username}:{\" \"}\r\n            {user.roll == \"merlin\"\r\n              ? \"Merlin\"\r\n              : user.roll == \"servant\"\r\n              ? \"Loyal servant of Arthur\"\r\n              : user.roll == \"minion\"\r\n              ? \"Minion of Mordred\"\r\n              : user.roll == \"percival\"\r\n              ? \"Percival\"\r\n              : user.roll == \"morgana\"\r\n              ? \"Morgana\"\r\n              : user.roll == \"mordred\"\r\n              ? \"Mordred\"\r\n              : user.roll == \"oberon\"\r\n              ? \"Oberon\"\r\n              : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n          </h5>\r\n        );\r\n      })}\r\n      <br />\r\n      <h3>Missions</h3>\r\n      {props.missions.map((mission, index) => {\r\n        return (\r\n          <h4 style={{ color: mission ? \"#218838\" : \"#dc3545\" }}>{`${\r\n            nums[index]\r\n          } MISSION - ${mission ? \"PASSED\" : \"FAILED\"}`}</h4>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\Merlin.jsx",["203","204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Merlin = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dropdownText, setDropdownText] = useState(\"Select Merlin\");\r\n  const [goodGuy, setGoodGuy] = useState();\r\n\r\n  const guessMerlin = () => {\r\n    props.socket.emit(\"guessMerlin\", goodGuy);\r\n  };\r\n\r\n  const toggle = () => setIsOpen((prevState) => !prevState);\r\n\r\n  return (\r\n    <>\r\n      {props.badPeople.filter((person) => person.id == props.socket.id)\r\n        .length == 1 ? (\r\n        <>\r\n          <h3>Go discuss who you think Merlin is!</h3>\r\n          {props.chosenOne && props.chosenOne.id == props.socket.id ? (\r\n            <>\r\n              <Dropdown isOpen={isOpen} toggle={toggle}>\r\n                <DropdownToggle caret>{dropdownText}</DropdownToggle>\r\n                <DropdownMenu>\r\n                  {props.goodPeople.map((person) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        onClick={() => {\r\n                          setDropdownText(person.username);\r\n                          setGoodGuy(person);\r\n                        }}\r\n                      >\r\n                        {person.username}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                  {/* <DropdownItem>{props.goodPeople.length}</DropdownItem> */}\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              {goodGuy ? (\r\n                <Button color=\"success\" onClick={guessMerlin}>\r\n                  Submit {goodGuy.username} as guess\r\n                </Button>\r\n              ) : null}\r\n            </>\r\n          ) : props.chosenOne ? (\r\n            <h3>{props.chosenOne.username} will submit the guess</h3>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <h3>\r\n          The bad guys are discussing Merlin, remember to keep it a secret!\r\n        </h3>\r\n      )}\r\n      {props.badPeople.map((person) => {\r\n        return (\r\n          <h5 style={{ color: \"#dc3545\" }}>\r\n            {person.username}:{\" \"}\r\n            {person.roll == \"merlin\"\r\n              ? \"Merlin\"\r\n              : person.roll == \"servant\"\r\n              ? \"Loyal servant of Arthur\"\r\n              : person.roll == \"minion\"\r\n              ? \"Minion of Mordred\"\r\n              : person.roll == \"percival\"\r\n              ? \"Percival\"\r\n              : person.roll == \"morgana\"\r\n              ? \"Morgana\"\r\n              : person.roll == \"mordred\"\r\n              ? \"Mordred\"\r\n              : person.roll == \"oberon\"\r\n              ? \"Oberon\"\r\n              : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n          </h5>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Merlin;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Home.jsx",["214"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logoImage from \"../../assets/logo192.png\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"nav\">\r\n        <div>\r\n          <h4>\r\n            <img style={{ width: \"35px\" }} src={logoImage} /> Avalon\r\n          </h4>\r\n        </div>\r\n        <Link to=\"/settings\">Settings</Link>\r\n      </div>\r\n      <br />\r\n      <Link className=\"homeMenuItem\" to=\"/join\">\r\n        Join a Game\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Link className=\"homeMenuItem\" to=\"/host\">\r\n        Host a Game\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Settings.jsx",["215"],"import React, { useState } from \"react\";\r\nimport { Input, Label, FormGroup, CustomInput } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const [defaultName, setDefaultName] = useState(\r\n    localStorage.getItem(\"username\")\r\n  );\r\n  const [enterGame, setEnterGame] = useState(\r\n    localStorage.getItem(\"enterGame\") == \"true\" ? true : false\r\n  );\r\n\r\n  const handleDefaultNameChange = (e) => {\r\n    setDefaultName(e.target.value);\r\n    localStorage.setItem(\"username\", e.target.value);\r\n  };\r\n\r\n  const handleEnterGameChange = (e) => {\r\n    console.log(\"hello\");\r\n    setEnterGame(e.target.checked);\r\n    localStorage.setItem(\"enterGame\", e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"1em\" }}>\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <h2>Settings</h2>\r\n      <hr />\r\n      <FormGroup>\r\n        <Label>\r\n          Default Name\r\n          <Input\r\n            style={{ textTransform: \"uppercase\" }}\r\n            placeholder=\"enter default name...\"\r\n            value={defaultName}\r\n            onChange={handleDefaultNameChange}\r\n          />\r\n        </Label>\r\n      </FormGroup>\r\n      <hr />\r\n      <FormGroup>\r\n        <Label for=\"enterGame\">\r\n          Automatically enter game after scanning QR code\r\n        </Label>\r\n        <CustomInput\r\n          id=\"enterGame\"\r\n          type=\"switch\"\r\n          // value={enterGame}\r\n          checked={enterGame}\r\n          onChange={handleEnterGameChange}\r\n        />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\GameComponents\\QR.jsx",["216","217"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"reactstrap\";\r\n\r\nconst QR = (props) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const toggle = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <img src={props.src} onClick={toggle} />\r\n      <Modal isOpen={modalOpen} style={{ padding: \"1em\" }}>\r\n        <div style={{ padding: \".5em\" }}>\r\n          <img src={props.src} width=\"100%\" />\r\n          <br />\r\n          <Button color=\"warning\" onClick={toggle}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QR;\r\n","C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\Loading.jsx",[],"C:\\Users\\ashto\\Desktop\\AvalonConnect\\client\\src\\Components\\Game\\UseUnsavedChangesWarning.jsx",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":19},{"ruleId":"222","severity":1,"message":"226","line":6,"column":3,"nodeType":"224","messageId":"225","endLine":6,"endColumn":7},{"ruleId":"222","severity":1,"message":"227","line":20,"column":10,"nodeType":"224","messageId":"225","endLine":20,"endColumn":16},{"ruleId":"222","severity":1,"message":"228","line":20,"column":18,"nodeType":"224","messageId":"225","endLine":20,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":12,"column":49,"nodeType":"231","messageId":"232","endLine":12,"endColumn":51},{"ruleId":"229","severity":1,"message":"230","line":17,"column":40,"nodeType":"231","messageId":"232","endLine":17,"endColumn":42},{"ruleId":"229","severity":1,"message":"233","line":18,"column":41,"nodeType":"231","messageId":"232","endLine":18,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":8,"suggestions":"237"},{"ruleId":"229","severity":1,"message":"233","line":69,"column":29,"nodeType":"231","messageId":"232","endLine":69,"endColumn":31},{"ruleId":"222","severity":1,"message":"238","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":16},{"ruleId":"222","severity":1,"message":"239","line":19,"column":20,"nodeType":"224","messageId":"225","endLine":19,"endColumn":31},{"ruleId":"222","severity":1,"message":"240","line":20,"column":16,"nodeType":"224","messageId":"225","endLine":20,"endColumn":23},{"ruleId":"222","severity":1,"message":"241","line":25,"column":16,"nodeType":"224","messageId":"225","endLine":25,"endColumn":23},{"ruleId":"222","severity":1,"message":"242","line":47,"column":28,"nodeType":"224","messageId":"225","endLine":47,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":96,"column":6,"nodeType":"236","endLine":96,"endColumn":8,"suggestions":"244"},{"ruleId":"222","severity":1,"message":"245","line":168,"column":9,"nodeType":"224","messageId":"225","endLine":168,"endColumn":19},{"ruleId":"222","severity":1,"message":"246","line":183,"column":9,"nodeType":"224","messageId":"225","endLine":183,"endColumn":19},{"ruleId":"222","severity":1,"message":"247","line":187,"column":12,"nodeType":"224","messageId":"225","endLine":187,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":260,"column":18,"nodeType":"231","messageId":"232","endLine":260,"endColumn":20},{"ruleId":"229","severity":1,"message":"233","line":269,"column":18,"nodeType":"231","messageId":"232","endLine":269,"endColumn":20},{"ruleId":"222","severity":1,"message":"248","line":2,"column":16,"nodeType":"224","messageId":"225","endLine":2,"endColumn":24},{"ruleId":"222","severity":1,"message":"240","line":8,"column":16,"nodeType":"224","messageId":"225","endLine":8,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":11,"column":49,"nodeType":"231","messageId":"232","endLine":11,"endColumn":51},{"ruleId":"229","severity":1,"message":"233","line":58,"column":29,"nodeType":"231","messageId":"232","endLine":58,"endColumn":31},{"ruleId":"222","severity":1,"message":"249","line":23,"column":9,"nodeType":"224","messageId":"225","endLine":23,"endColumn":15},{"ruleId":"234","severity":1,"message":"250","line":43,"column":6,"nodeType":"236","endLine":43,"endColumn":8,"suggestions":"251"},{"ruleId":"229","severity":1,"message":"233","line":91,"column":41,"nodeType":"231","messageId":"232","endLine":91,"endColumn":43},{"ruleId":"222","severity":1,"message":"252","line":1,"column":28,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"233","line":12,"column":20,"nodeType":"231","messageId":"232","endLine":12,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":13,"column":25,"nodeType":"231","messageId":"232","endLine":13,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":20,"column":27,"nodeType":"231","messageId":"232","endLine":20,"endColumn":29},{"ruleId":"234","severity":1,"message":"253","line":33,"column":6,"nodeType":"236","endLine":33,"endColumn":39,"suggestions":"254"},{"ruleId":"229","severity":1,"message":"233","line":42,"column":32,"nodeType":"231","messageId":"232","endLine":42,"endColumn":34},{"ruleId":"229","severity":1,"message":"233","line":43,"column":21,"nodeType":"231","messageId":"232","endLine":43,"endColumn":23},{"ruleId":"222","severity":1,"message":"255","line":50,"column":11,"nodeType":"224","messageId":"225","endLine":50,"endColumn":17},{"ruleId":"229","severity":1,"message":"233","line":55,"column":59,"nodeType":"231","messageId":"232","endLine":55,"endColumn":61},{"ruleId":"229","severity":1,"message":"233","line":62,"column":19,"nodeType":"231","messageId":"232","endLine":62,"endColumn":21},{"ruleId":"234","severity":1,"message":"253","line":74,"column":6,"nodeType":"236","endLine":74,"endColumn":25,"suggestions":"256"},{"ruleId":"229","severity":1,"message":"233","line":135,"column":56,"nodeType":"231","messageId":"232","endLine":135,"endColumn":58},{"ruleId":"229","severity":1,"message":"233","line":144,"column":25,"nodeType":"231","messageId":"232","endLine":144,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":153,"column":25,"nodeType":"231","messageId":"232","endLine":153,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":168,"column":26,"nodeType":"231","messageId":"232","endLine":168,"endColumn":28},{"ruleId":"229","severity":1,"message":"233","line":170,"column":37,"nodeType":"231","messageId":"232","endLine":170,"endColumn":39},{"ruleId":"229","severity":1,"message":"233","line":171,"column":26,"nodeType":"231","messageId":"232","endLine":171,"endColumn":28},{"ruleId":"229","severity":1,"message":"233","line":174,"column":39,"nodeType":"231","messageId":"232","endLine":174,"endColumn":41},{"ruleId":"229","severity":1,"message":"233","line":175,"column":28,"nodeType":"231","messageId":"232","endLine":175,"endColumn":30},{"ruleId":"229","severity":1,"message":"233","line":179,"column":37,"nodeType":"231","messageId":"232","endLine":179,"endColumn":39},{"ruleId":"229","severity":1,"message":"233","line":180,"column":26,"nodeType":"231","messageId":"232","endLine":180,"endColumn":28},{"ruleId":"229","severity":1,"message":"233","line":183,"column":37,"nodeType":"231","messageId":"232","endLine":183,"endColumn":39},{"ruleId":"229","severity":1,"message":"233","line":184,"column":26,"nodeType":"231","messageId":"232","endLine":184,"endColumn":28},{"ruleId":"229","severity":1,"message":"233","line":191,"column":23,"nodeType":"231","messageId":"232","endLine":191,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":192,"column":59,"nodeType":"231","messageId":"232","endLine":192,"endColumn":61},{"ruleId":"229","severity":1,"message":"233","line":193,"column":23,"nodeType":"231","messageId":"232","endLine":193,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":195,"column":61,"nodeType":"231","messageId":"232","endLine":195,"endColumn":63},{"ruleId":"229","severity":1,"message":"233","line":196,"column":25,"nodeType":"231","messageId":"232","endLine":196,"endColumn":27},{"ruleId":"229","severity":1,"message":"233","line":199,"column":59,"nodeType":"231","messageId":"232","endLine":199,"endColumn":61},{"ruleId":"229","severity":1,"message":"233","line":200,"column":23,"nodeType":"231","messageId":"232","endLine":200,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":202,"column":59,"nodeType":"231","messageId":"232","endLine":202,"endColumn":61},{"ruleId":"229","severity":1,"message":"233","line":203,"column":23,"nodeType":"231","messageId":"232","endLine":203,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":209,"column":23,"nodeType":"231","messageId":"232","endLine":209,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":210,"column":51,"nodeType":"231","messageId":"232","endLine":210,"endColumn":53},{"ruleId":"229","severity":1,"message":"233","line":210,"column":78,"nodeType":"231","messageId":"232","endLine":210,"endColumn":80},{"ruleId":"229","severity":1,"message":"233","line":228,"column":55,"nodeType":"231","messageId":"232","endLine":228,"endColumn":57},{"ruleId":"222","severity":1,"message":"252","line":1,"column":28,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"233","line":23,"column":28,"nodeType":"231","messageId":"232","endLine":23,"endColumn":30},{"ruleId":"229","severity":1,"message":"233","line":24,"column":28,"nodeType":"231","messageId":"232","endLine":24,"endColumn":30},{"ruleId":"229","severity":1,"message":"233","line":25,"column":28,"nodeType":"231","messageId":"232","endLine":25,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":49,"column":31,"nodeType":"231","messageId":"232","endLine":49,"endColumn":33},{"ruleId":"229","severity":1,"message":"233","line":68,"column":29,"nodeType":"231","messageId":"232","endLine":68,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":75,"column":35,"nodeType":"231","messageId":"232","endLine":75,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":76,"column":35,"nodeType":"231","messageId":"232","endLine":76,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":77,"column":35,"nodeType":"231","messageId":"232","endLine":77,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":82,"column":32,"nodeType":"231","messageId":"232","endLine":82,"endColumn":34},{"ruleId":"229","severity":1,"message":"233","line":84,"column":35,"nodeType":"231","messageId":"232","endLine":84,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":86,"column":35,"nodeType":"231","messageId":"232","endLine":86,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":88,"column":35,"nodeType":"231","messageId":"232","endLine":88,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":90,"column":35,"nodeType":"231","messageId":"232","endLine":90,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":92,"column":35,"nodeType":"231","messageId":"232","endLine":92,"endColumn":37},{"ruleId":"229","severity":1,"message":"233","line":94,"column":35,"nodeType":"231","messageId":"232","endLine":94,"endColumn":37},{"ruleId":"222","severity":1,"message":"238","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"257","line":10,"column":6,"nodeType":"236","endLine":10,"endColumn":22,"suggestions":"258"},{"ruleId":"229","severity":1,"message":"233","line":26,"column":61,"nodeType":"231","messageId":"232","endLine":26,"endColumn":63},{"ruleId":"229","severity":1,"message":"233","line":34,"column":62,"nodeType":"231","messageId":"232","endLine":34,"endColumn":64},{"ruleId":"229","severity":1,"message":"233","line":12,"column":53,"nodeType":"231","messageId":"232","endLine":12,"endColumn":55},{"ruleId":"229","severity":1,"message":"233","line":34,"column":52,"nodeType":"231","messageId":"232","endLine":34,"endColumn":54},{"ruleId":"229","severity":1,"message":"233","line":34,"column":79,"nodeType":"231","messageId":"232","endLine":34,"endColumn":81},{"ruleId":"229","severity":1,"message":"233","line":43,"column":21,"nodeType":"231","messageId":"232","endLine":43,"endColumn":23},{"ruleId":"229","severity":1,"message":"233","line":44,"column":20,"nodeType":"231","messageId":"232","endLine":44,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":45,"column":20,"nodeType":"231","messageId":"232","endLine":45,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":46,"column":20,"nodeType":"231","messageId":"232","endLine":46,"endColumn":22},{"ruleId":"229","severity":1,"message":"230","line":61,"column":20,"nodeType":"231","messageId":"232","endLine":61,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":12,"column":23,"nodeType":"231","messageId":"232","endLine":12,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":14,"column":43,"nodeType":"231","messageId":"232","endLine":14,"endColumn":45},{"ruleId":"229","severity":1,"message":"233","line":21,"column":30,"nodeType":"231","messageId":"232","endLine":21,"endColumn":32},{"ruleId":"222","severity":1,"message":"259","line":4,"column":16,"nodeType":"224","messageId":"225","endLine":4,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":8,"column":28,"nodeType":"231","messageId":"232","endLine":8,"endColumn":30},{"ruleId":"229","severity":1,"message":"233","line":20,"column":62,"nodeType":"231","messageId":"232","endLine":20,"endColumn":64},{"ruleId":"229","severity":1,"message":"233","line":32,"column":27,"nodeType":"231","messageId":"232","endLine":32,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":33,"column":27,"nodeType":"231","messageId":"232","endLine":33,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":34,"column":27,"nodeType":"231","messageId":"232","endLine":34,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":40,"column":24,"nodeType":"231","messageId":"232","endLine":40,"endColumn":26},{"ruleId":"229","severity":1,"message":"233","line":42,"column":27,"nodeType":"231","messageId":"232","endLine":42,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":44,"column":27,"nodeType":"231","messageId":"232","endLine":44,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":46,"column":27,"nodeType":"231","messageId":"232","endLine":46,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":48,"column":27,"nodeType":"231","messageId":"232","endLine":48,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":50,"column":27,"nodeType":"231","messageId":"232","endLine":50,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":52,"column":27,"nodeType":"231","messageId":"232","endLine":52,"endColumn":29},{"ruleId":"222","severity":1,"message":"260","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"233","line":23,"column":53,"nodeType":"231","messageId":"232","endLine":23,"endColumn":55},{"ruleId":"229","severity":1,"message":"233","line":24,"column":17,"nodeType":"231","messageId":"232","endLine":24,"endColumn":19},{"ruleId":"229","severity":1,"message":"233","line":27,"column":50,"nodeType":"231","messageId":"232","endLine":27,"endColumn":52},{"ruleId":"229","severity":1,"message":"233","line":66,"column":26,"nodeType":"231","messageId":"232","endLine":66,"endColumn":28},{"ruleId":"229","severity":1,"message":"233","line":68,"column":29,"nodeType":"231","messageId":"232","endLine":68,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":70,"column":29,"nodeType":"231","messageId":"232","endLine":70,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":72,"column":29,"nodeType":"231","messageId":"232","endLine":72,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":74,"column":29,"nodeType":"231","messageId":"232","endLine":74,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":76,"column":29,"nodeType":"231","messageId":"232","endLine":76,"endColumn":31},{"ruleId":"229","severity":1,"message":"233","line":78,"column":29,"nodeType":"231","messageId":"232","endLine":78,"endColumn":31},{"ruleId":"261","severity":1,"message":"262","line":11,"column":13,"nodeType":"263","endLine":11,"endColumn":62},{"ruleId":"229","severity":1,"message":"233","line":10,"column":39,"nodeType":"231","messageId":"232","endLine":10,"endColumn":41},{"ruleId":"261","severity":1,"message":"262","line":11,"column":7,"nodeType":"263","endLine":11,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":14,"column":11,"nodeType":"263","endLine":14,"endColumn":47},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'inRoom' is assigned a value but never used.","'setInRoom' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'room'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'Button' is defined but never used.","'setUsername' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'setHost' is assigned a value but never used.","'setClean' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'room', 'setDirty', and 'username'. Either include them or remove the dependency array.",["267"],"'changeKing' is assigned a value but never used.","'toggleRoll' is assigned a value but never used.","'pageUnload' is defined but never used.","'Redirect' is defined but never used.","'moveUp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'generateQr' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["268"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["269"],"'passes' is assigned a value but never used.",["270"],"React Hook useEffect has a missing dependency: 'props.passesFails'. Either include it or remove the dependency array. If 'setPassesFails' needs the current value of 'props.passesFails', you can also switch to useReducer instead of useState and read 'props.passesFails' in the reducer.",["271"],"'setNums' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [room]",{"range":"284","text":"285"},"Update the dependencies array to be: [room, setDirty, username]",{"range":"286","text":"287"},"Update the dependencies array to be: [generateQr, props]",{"range":"288","text":"289"},"Update the dependencies array to be: [props, props.displayVote, props.voting]",{"range":"290","text":"291"},"Update the dependencies array to be: [props, props.passesFails]",{"range":"292","text":"293"},"Update the dependencies array to be: [props.passFail, props.passesFails]",{"range":"294","text":"295"},[708,710],"[room]",[3638,3640],"[room, setDirty, username]",[1171,1173],"[generateQr, props]",[993,1026],"[props, props.displayVote, props.voting]",[2088,2107],"[props, props.passesFails]",[283,299],"[props.passFail, props.passesFails]"]