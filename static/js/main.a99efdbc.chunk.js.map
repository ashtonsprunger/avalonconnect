{"version":3,"sources":["Components/Game/Game.jsx","assets/logo192.png","Components/Game/Home.jsx","Components/Game/Settings.jsx","Components/Game/GameComponents/QR.jsx","Components/Game/GameComponents/Waiting.jsx","Components/Game/GameComponents/LastRound.jsx","Components/Game/GameComponents/PassFail.jsx","Components/Game/GameComponents/Missions.jsx","Components/Game/GameComponents/Team.jsx","Components/Game/GameComponents/Roll.jsx","Components/Game/GameComponents/Results.jsx","Components/Game/GameComponents/Merlin.jsx","Components/Game/Loading.jsx","Components/Game/UseUnsavedChangesWarning.jsx","Components/Join/Join.jsx","Components/Host/Host.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["socket","Home","className","style","width","src","logoImage","to","Settings","useState","localStorage","getItem","defaultName","setDefaultName","enterGame","setEnterGame","padding","FormGroup","Label","Input","textTransform","placeholder","value","onChange","e","target","setItem","for","CustomInput","id","type","checked","console","log","QR","props","modalOpen","setModalOpen","toggle","onClick","Modal","isOpen","Button","color","Waiting","percivalMorgana","setPercivalMorgana","oberon","setOberon","qrUrl","setQrUrl","array_move","arr","old_index","new_index","length","k","push","undefined","splice","generateQr","a","qrCode","toDataURL","room","response","useEffect","on","users","setUsers","class","host","map","user","index","username","rearrange","moveDown","backgroundColor","emit","usersP","changeRender","LastRound","passesFails","setPassesFails","passFail","lastRound","includes","filter","item","king","onTeam","person","acceptedPeople","rejectedPeople","PassFail","isPassing","setIsPassing","hasSubmitted","setHasSubmitted","roll","disabled","marginTop","addToPass","addToFail","Missions","currentMission","missions","gameInfo","twoFails","teams","Team","kingStarted","voting","displayVote","setDisplayVote","setKingStarted","nextKing","setPassFail","setLastRound","passed","fails","i","passes","addMission","userInUsers","changeOnTeam","toggleOnTeam","addToAccepted","addToRejected","Roll","toggleIsOpen","setRollOpen","rollOpen","setRollClosed","sees","characters","character","Results","nums","merlinCorrect","mission","Merlin","setIsOpen","dropdownText","setDropdownText","goodGuy","setGoodGuy","badPeople","chosenOne","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","goodPeople","DropdownItem","Loading","UseUnsavedChangesWarning","isDirty","setIsDirty","window","onbeforeunload","when","message","Game","useParams","toUpperCase","setCharacters","rollClosed","render","setRender","setRoll","setSees","setKing","setOnTeam","setAcceptedPeople","setRejectedPeople","setGameInfo","setCurrentMission","setMissions","setVoting","setMerlinCorrect","setBadPeople","setGoodPeople","setChosenOne","Prompt","setDirty","io","chars","newRender","newKing","newOnTeam","newAcceptedRejected","showVote","callVote","document","body","newR","newO","newAR","accepted","rejected","show","newK","newUsers","newA","newPassFail","newPF","Join","setUsername","setRoom","enterRoom","setEnterRoom","Form","onSubmit","preventDefault","alert","Host","result","charactersLength","charAt","Math","floor","random","makeid","required","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":";iPAeIA,E,wFCfW,MAA0B,oCC4B1BC,EAxBF,WACX,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,8BACE,+BACE,qBAAKC,MAAO,CAAEC,MAAO,QAAUC,IAAKC,IADtC,eAIF,cAAC,IAAD,CAAMC,GAAG,YAAT,yBAEF,uBACA,cAAC,IAAD,CAAML,UAAU,eAAeK,GAAG,QAAlC,yBAGA,uBACA,uBACA,cAAC,IAAD,CAAML,UAAU,eAAeK,GAAG,QAAlC,6B,oCCuCSC,EAxDE,WAAO,IAAD,EACiBC,mBACpCC,aAAaC,QAAQ,aAFF,mBACdC,EADc,KACDC,EADC,OAIaJ,mBACK,QAArCC,aAAaC,QAAQ,cALF,mBAIdG,EAJc,KAIHC,EAJG,KAmBrB,OACE,sBAAKZ,MAAO,CAAEa,QAAS,OAAvB,UACE,qBAAKd,UAAU,MAAf,SACE,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAG,IAA1B,oBAIF,0CACA,uBACA,cAACU,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,0BAEE,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAEiB,cAAe,aACxBC,YAAY,wBACZC,MAAOV,EACPW,SA3BsB,SAACC,GAC/BX,EAAeW,EAAEC,OAAOH,OACxBZ,aAAagB,QAAQ,WAAYF,EAAEC,OAAOH,eA6BxC,uBACA,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOS,IAAI,YAAX,6DAGA,cAACC,EAAA,EAAD,CACEC,GAAG,YACHC,KAAK,SAELC,QAASjB,EACTS,SApCsB,SAACC,GAC7BQ,QAAQC,IAAI,SACZlB,EAAaS,EAAEC,OAAOM,SACtBrB,aAAagB,QAAQ,YAAaF,EAAEC,OAAOM,mB,qFCIhCG,EArBJ,SAACC,GAAW,IAAD,EACc1B,oBAAS,GADvB,mBACb2B,EADa,KACFC,EADE,KAEdC,EAAS,WACbD,GAAcD,IAEhB,OACE,qCACE,qBAAK/B,IAAK8B,EAAM9B,IAAKkC,QAASD,IAC9B,cAACE,EAAA,EAAD,CAAOC,OAAQL,EAAWjC,MAAO,CAAEa,QAAS,OAA5C,SACE,sBAAKb,MAAO,CAAEa,QAAS,QAAvB,UACE,qBAAKX,IAAK8B,EAAM9B,IAAKD,MAAM,SAC3B,uBACA,cAACsC,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAASD,EAAjC,4BCkHKM,EA3HC,SAACT,GAAW,IAAD,EACqB1B,oBAAS,GAD9B,mBAClBoC,EADkB,KACDC,EADC,OAEGrC,oBAAS,GAFZ,mBAElBsC,EAFkB,KAEVC,EAFU,OAGCvC,mBAAS,IAHV,mBAGlBwC,EAHkB,KAGXC,EAHW,KAKzB,SAASC,EAAWC,EAAKC,EAAWC,GAClC,GAAIA,GAAaF,EAAIG,OAEnB,IADA,IAAIC,EAAIF,EAAYF,EAAIG,OAAS,EAC1BC,KACLJ,EAAIK,UAAKC,GAIb,OADAN,EAAIO,OAAOL,EAAW,EAAGF,EAAIO,OAAON,EAAW,GAAG,IAC3CD,EAGT,IAQMQ,EAAU,uCAAG,4BAAAC,EAAA,sEACMC,IAAOC,UAAP,mDACuB5B,EAAM6B,OAFnC,OACXC,EADW,OAIjBf,EAASe,GAJQ,2CAAH,qDAOhBC,qBAAU,WACR/B,EAAMnC,OAAOmE,GAAG,aAAa,YAAqB,EAAlBH,KAAmB,IAAbI,EAAY,EAAZA,MACpCjC,EAAMkC,SAASD,MAEjBR,MACC,IAEHM,qBAAU,WACRlC,QAAQC,IAAIgB,KACX,CAACA,IAgCJ,OACE,sBAAK/C,UAAU,cAAf,UACE,oBAAIoE,MAAM,OAAV,SAAkBnC,EAAM6B,OACvB7B,EAAMoC,KACL,oBAAIrE,UAAU,UAAd,6BAEA,mEAEDiC,EAAMiC,MAAMI,KAAI,SAACC,EAAMC,GACtB,OACE,qBACEvE,MAAO,CACLwC,MAAM,GAAD,OAAKR,EAAMnC,OAAO6B,IAAM4C,EAAK5C,GAAK,UAAY,UAFvD,UAKG4C,EAAKE,SAAU,IACfxC,EAAMoC,KACL,+BACGG,EAAQ,EACP,cAAChC,EAAA,EAAD,CAAQH,QAAS,kBAvEhB,SAACmC,GAChBvC,EAAMyC,UAAUzB,EAAWhB,EAAMiC,MAAOM,EAAOA,EAAQ,IAsElBG,CAASH,IAAhC,eACE,OAEJ,WAITvC,EAAMoC,KACL,qCACE,cAAC7B,EAAA,EAAD,CACEvC,MAAO,CAAE2E,gBAAiB,SAC1BvC,QAlDyB,SAACf,GAC9BqB,GACFC,GAAmB,GACnBtB,EAAEC,OAAOtB,MAAM2E,gBAAkB,YAEjChC,GAAmB,GACnBtB,EAAEC,OAAOtB,MAAM2E,gBAAkB,UA0C7B,8BAKU,IACV,cAACpC,EAAA,EAAD,CACEvC,MAAO,CAAE2E,gBAAiB,SAC1BvC,QA9CgB,SAACf,GACrBuB,GACFC,GAAU,GACVxB,EAAEC,OAAOtB,MAAM2E,gBAAkB,YAEjC9B,GAAU,GACVxB,EAAEC,OAAOtB,MAAM2E,gBAAkB,UAsC7B,oBAMA,uBACA,uBACA,cAACpC,EAAA,EAAD,CAAQH,QAxEE,WAChBJ,EAAMnC,OAAO+E,KAAK,YAAa,CAC7BlC,gBAAiBA,EACjBE,OAAQA,EACRiC,OAAQ7C,EAAMiC,QAEhBjC,EAAM8C,aAAa,SAkEb,wBACA,0BAEA,KACHhC,EAAQ,cAAC,EAAD,CAAI5C,IAAK4C,IAAY,S,QCjErBiC,EAxDG,SAAC/C,GAAW,IAAD,EACW1B,mBAAS,IADpB,mBACpB0E,EADoB,KACPC,EADO,KAQ3B,OANAlB,qBAAU,WACH/B,EAAMkD,UACTD,EAAejD,EAAMgD,eAEtB,CAAChD,EAAMkD,WAGR,qCACE,uBACA,uBACA,uBACClD,EAAMmD,UACL,qCACE,6BACGH,EAAY5B,OAAS,EAArB,UAEK4B,EAAYI,UAAS,GACjBJ,EAAYK,QAAO,SAACC,GAAD,OAAUA,KAAMlC,OACnC,EAJT,YAMkD,GAA7C4B,EAAYK,QAAO,SAACC,GAAD,OAAUA,KAAMlC,OAC/B,OACA,SART,aAUK4B,EAAYI,UAAS,GACjBJ,EAAYK,QAAO,SAACC,GAAD,OAAWA,KAAMlC,OACpC,EAZT,YAcmD,GAA9C4B,EAAYK,QAAO,SAACC,GAAD,OAAWA,KAAMlC,OAChC,OACA,SAEN,OAGN,oDAAuBpB,EAAMmD,UAAUI,KAAKf,YAC5C,8CACCxC,EAAMmD,UAAUK,OAAOnB,KAAI,SAACoB,GAC3B,OAAO,4BAAIA,EAAOjB,cAEpB,2CACCxC,EAAMmD,UAAUO,eAAerB,KAAI,SAACoB,GACnC,OAAO,4BAAIA,EAAOjB,cAEpB,2CACCxC,EAAMmD,UAAUQ,eAAetB,KAAI,SAACoB,GACnC,OAAO,4BAAIA,EAAOjB,iBAGpB,SCoBKoB,EAvEE,SAAC5D,GAQhB,IAAMsC,EAAOtC,EAAMiC,MAAMoB,QAAO,SAACf,GAAD,OAAUA,EAAK5C,IAAMM,EAAMnC,OAAO6B,MAAI,GAR5C,EASQpB,qBATR,mBASnBuF,EATmB,KASRC,EATQ,OAUcxF,oBAAS,GAVvB,mBAUnByF,EAVmB,KAULC,EAVK,KA8B1B,OACE,GADKhE,EAAMwD,OAAOH,QAAO,SAACI,GAAD,OAAYA,EAAO/D,IAAMM,EAAMnC,OAAO6B,MAAI0B,OAEnE2C,EACE,6DAEA,qCACE,cAACxD,EAAA,EAAD,CAAQH,QAxBD,WACX0D,GAAa,IAuBctD,MAAM,UAA7B,kBAEU,IACK,WAAdR,EAAMiE,MACO,UAAdjE,EAAMiE,MACQ,WAAdjE,EAAMiE,MACQ,UAAdjE,EAAMiE,KACJ,qCACE,cAAC1D,EAAA,EAAD,CAAQH,QA5BL,WACX0D,GAAa,IA2BkBtD,MAAM,SAA7B,kBAGA,0BAGF,qCACE,cAACD,EAAA,EAAD,CAAQC,MAAM,SAAS0D,UAAU,EAAjC,kBAGA,+BAGU3C,GAAbsC,EACC,cAACtD,EAAA,EAAD,CACEvC,MAAO,CAAEmG,UAAW,SACpB3D,MAAOqD,EAAY,UAAY,SAC/BzD,QAzCK,WACTyD,GACF7D,EAAMoE,UAAU9B,GAChB0B,GAAgB,KAEhBhE,EAAMqE,UAAU/B,GAChB0B,GAAgB,KAgCZ,SAKGH,EAAY,cAAgB,gBAE7B,QAGN,MCrCSS,EA/BE,SAACtE,GAChB,OACE,qCACG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGqC,KAAI,SAACE,GACpB,OACE,qCACE,cAAChC,EAAA,EAAD,CACEC,MACE+B,GAASvC,EAAMuE,eAAiB,EAC5B,eACyBhD,GAAzBvB,EAAMwE,SAASjC,GACf,YACAvC,EAAMwE,SAASjC,GACf,UACA,SAENvE,MAAO,CACLwC,MAAgB,GAAT+B,GAAcvC,EAAMyE,SAASC,SAAW,QAAU,IAX7D,SAcG1E,EAAMyE,SAASE,MAAMpC,KACd,UAIhB,uBACA,2BCoOSqC,EA1PF,SAAC5E,GACZ+B,qBAAU,WAEN/B,EAAM6E,aACU,GAAhB7E,EAAM8E,QACe,GAArB9E,EAAM+E,cAEF/E,EAAM2D,eAAevC,QAAUpB,EAAM0D,eAAetC,QACtDvB,QAAQC,IAAI,gBAAiBE,EAAM+E,aACnC/E,EAAMgF,gBAAe,GACrBnF,QAAQC,IAAI,gBAAiBE,EAAM+E,aACnC/E,EAAMiF,gBAAe,GACjBjF,EAAMuD,KAAK7D,IAAMM,EAAMnC,OAAO6B,IAChCM,EAAMkF,aAGRlF,EAAMmF,aAAY,GAClBnF,EAAMoF,aAAa,CACjB7B,KAAMvD,EAAMuD,KACZC,OAAQxD,EAAMwD,OACdG,eAAgB3D,EAAM2D,eACtBD,eAAgB1D,EAAM0D,qBAI3B,CAAC1D,EAAM+E,YAAa/E,EAAM8E,SAE7B/C,qBAAU,WACRlC,QAAQC,IAAR,mCAAwCE,EAAM+E,gBAC7C,CAAC/E,EAAM+E,cAEVhD,qBAAU,WACR,GACE/B,EAAMwD,OAAOpC,OAAS,GACtBpB,EAAMgD,YAAY5B,QAAUpB,EAAMwD,OAAOpC,QACzCpB,EAAMuD,KAAK7D,IAAMM,EAAMnC,OAAO6B,GAC9B,CAIA,IAHA,IAEI2F,EADAC,EAAQ,EAEHC,EAAI,EAAGA,EAAIvF,EAAMgD,YAAY5B,OAAQmE,IACxCvF,EAAMgD,YAAYuC,GACpBC,EAEAF,IAKAD,EAFArF,EAAMyE,SAASC,UAAoC,GAAxB1E,EAAMuE,eAC/Be,EAAQ,EAMC,GAATA,EAMNtF,EAAMyF,WAAWJ,EAAQrF,EAAMuE,gBAE/BvE,EAAMkF,WAENrF,QAAQC,IAAI,aAAcuF,EAAQrF,EAAMuE,mBAEzC,CAACvE,EAAMgD,cAEV,IAgBM0C,EAAc,SAACpD,EAAML,GACzB,IAAK,IAAIsD,EAAI,EAAGA,EAAItD,EAAMb,OAAQmE,IAChC,GAAItD,EAAMsD,GAAG7F,KAAO4C,EAAK5C,GACvB,MAAO,EAAC,EAAM6F,GAGlB,MAAO,EAAC,GAAQ,IAuBlB,OACE,gCACGvF,EAAMuD,KAAK7D,KAAOM,EAAMnC,OAAO6B,GAC9B,mCACE,oBAAI1B,MAAO,CAAEwC,MAAO,WAApB,gCAGF,+BAAKR,EAAMuD,KAAKf,SAAhB,kBAEF,cAAC,EAAD,CACE+B,eAAgBvE,EAAMuE,eACtBC,SAAUxE,EAAMwE,SAChBC,SAAUzE,EAAMyE,WAEjBzE,EAAMyE,SAASC,UAAoC,GAAxB1E,EAAMuE,eAChC,oBAAIvG,MAAO,CAAEwC,MAAO,WAApB,mDAGE,KACHR,EAAMiC,MAAMI,KAAI,SAACC,GAAD,OACf,oBACEtE,MACE0H,EAAYpD,EAAMtC,EAAMwD,QAAQ,GAC5BlB,EAAK5C,IAAMM,EAAMnC,OAAO6B,GACtB,CACEiD,gBAAiB,UACjBnC,MAAO,SAET,CACEmC,gBAAiB,UACjBnC,MAAO,SAEX8B,EAAK5C,IAAMM,EAAMnC,OAAO6B,GACxB,CACEc,MAAO,WAET,GAENJ,QAAS,kBApDI,SAACkC,GAChBtC,EAAMnC,OAAO6B,KAAOM,EAAMuD,KAAK7D,IAAOM,EAAM8E,QAAW9E,EAAMkD,WAC3DwC,EAAYpD,EAAMtC,EAAMwD,QAAQ,GAClCxD,EAAM2F,aACJ3F,EAAMwD,OAAOH,QAAO,SAACI,GAAD,OAAYA,EAAO/D,KAAO4C,EAAK5C,OAGrDM,EAAMyE,SAASE,MAAM3E,EAAMuE,eAAiB,GAAKvE,EAAMwD,OAAOpC,QAE9DpB,EAAM2F,aAAN,sBAAuB3F,EAAMwD,QAA7B,CAAqClB,MA2CpBsD,CAAatD,IAlB9B,SAoBGA,EAAKE,cAGV,uBACA,oBACExE,MAAO,CACLwC,MACkB,GAAhBR,EAAM8E,OAGU,GAFZ9E,EAAM0D,eAAeL,QACnB,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAClC0B,OACA,UAGY,GAFZpB,EAAM2D,eAAeN,QACnB,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAClC0B,OACF,UACA,KAGU,GAFZpB,EAAM0D,eAAeL,QACnB,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAClC0B,OACF,UAGY,GAFZpB,EAAM2D,eAAeN,QACnB,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAClC0B,OACF,UACApB,EAAM+E,YACN,UACA,MAvBV,SA0BmB,GAAhB/E,EAAM8E,OAEU,GADb9E,EAAM0D,eAAeL,QAAO,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAC3D0B,OACD,uBAEa,GADbpB,EAAM2D,eAAeN,QAAO,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAC3D0B,OACH,uBACA,KAEW,GADbpB,EAAM0D,eAAeL,QAAO,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAC3D0B,OACH,eAEa,GADbpB,EAAM2D,eAAeN,QAAO,SAACC,GAAD,OAAUA,EAAK5D,IAAMM,EAAMnC,OAAO6B,MAC3D0B,OACH,eACApB,EAAM+E,YACN,kBACA,OAEa,GAAlB/E,EAAMkD,SAEL,GADAlD,EAAMwD,OAAOH,QAAO,SAACI,GAAD,OAAYA,EAAO/D,IAAMM,EAAMnC,OAAO6B,MAAI0B,OAE5D,qDAEA,6DAEA,KACHpB,EAAMkD,SACL,cAAC,EAAD,CACEM,OAAQxD,EAAMwD,OACdS,KAAMjE,EAAMiE,KACZf,SAAUlD,EAAMkD,SAChBrF,OAAQmC,EAAMnC,OACdoE,MAAOjC,EAAMiC,MACbmC,UAAWpE,EAAMoE,UACjBC,UAAWrE,EAAMqE,YAEjB,KACHrE,EAAMyE,SAASE,MAAM3E,EAAMuE,eAAiB,IAAMvE,EAAMwD,OAAOpC,QAChEpB,EAAMnC,OAAO6B,KAAOM,EAAMuD,KAAK7D,IAC9BM,EAAM8E,QACN9E,EAAM+E,YAEH,KADF,cAACxE,EAAA,EAAD,CAAQH,QAnIG,WACfJ,EAAMnC,OAAO+E,KAAK,aAkId,6BAED5C,EAAM8E,OACL,qCACE,cAACvE,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAhKX,WACdJ,EAAM+E,aACT/E,EAAM6F,cACJ7F,EAAMiC,MAAMoB,QAAO,SAACf,GAAD,OAAUA,EAAK5C,KAAOM,EAAMnC,OAAO6B,MAAI,KA6JxD,qBAEU,IACV,cAACa,EAAA,EAAD,CAAQC,MAAM,SAASJ,QA3JV,WACdJ,EAAM+E,aACT/E,EAAM8F,cACJ9F,EAAMiC,MAAMoB,QAAO,SAACf,GAAD,OAAUA,EAAK5C,KAAOM,EAAMnC,OAAO6B,MAAI,KAwJxD,uBAIA,KACJ,uBAEA,cAAC,EAAD,CACEyD,UAAWnD,EAAMmD,UACjBqB,SAAUxE,EAAMwE,SAChBD,eAAgBvE,EAAMuE,eACtBE,SAAUzE,EAAMyE,SAChBzB,YAAahD,EAAMgD,YACnBE,SAAUlD,EAAMkD,eC9IT6C,G,OAzGF,SAAC/F,GACZ+B,qBAAU,cAAU,IAEpB,IAAMiE,EAAe,WACnBhG,EAAMiG,aAAajG,EAAMkG,UACzBlG,EAAMmG,eAAc,IAGtB,OACE,qCACE,cAAC5F,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAAS4F,EAAjC,SACGhG,EAAMwC,WAET,cAACnC,EAAA,EAAD,CAAOC,OAAQN,EAAMkG,SAArB,SACE,sBAAKxG,GAAG,WAAR,UACE,oBACE1B,MAAO,CACLwC,MACgB,UAAdR,EAAMiE,MACQ,WAAdjE,EAAMiE,MACQ,YAAdjE,EAAMiE,KACF,UACA,WAPV,SAUkB,YAAfjE,EAAMiE,KACH,oCACe,aAAfjE,EAAMiE,KACN,mBACe,WAAfjE,EAAMiE,KACN,iBACe,WAAfjE,EAAMiE,KACN,8BACe,YAAfjE,EAAMiE,KACN,kBACe,YAAfjE,EAAMiE,KACN,kBACe,WAAfjE,EAAMiE,KACN,iBACA,OAEN,uBAECjE,EAAMoG,MACgB,GAArBpG,EAAMoG,KAAKhF,OACT,qCACE,0CACA,0BAGF,KAEHpB,EAAMoG,KACHpG,EAAMoG,KAAK/D,KAAI,SAACoB,GAAD,OACb,mCACE,yCAAOA,UAIX,KACJ,uBACA,wCACA,4BACqBlC,GAApBvB,EAAMqG,WACH,KACArG,EAAMqG,WAAWhE,KAAI,SAACiE,GACpB,OACE,oBACEtI,MAAO,CACLwC,MACe,UAAb8F,GACa,WAAbA,GACa,YAAbA,EACI,UACA,WAPV,SAUgB,UAAbA,EACG,SACa,WAAbA,EACA,0BACa,UAAbA,EACA,oBACa,YAAbA,EACA,WACa,WAAbA,EACA,UACa,WAAbA,EACA,UACa,UAAbA,EACA,SACA,2EAId,uBACA,cAAC/F,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAAS4F,EAAjC,6BC9BKO,EApEC,SAACvG,GAAW,IAAD,EACD1B,mBAAS,CAAC,MAAO,MAAO,MAAO,MAAO,QADrC,mBAClBkI,EADkB,UAGzB,OACE,0CAC0BjF,GAAvBvB,EAAMyG,cACLzG,EAAMyG,cACJ,qCACE,oBAAIzI,MAAO,CAAEwC,MAAO,WAApB,2BACA,iEAGF,qCACE,oBAAIxC,MAAO,CAAEwC,MAAO,WAApB,4BACA,mEAGoD,GAAtDR,EAAMwE,SAASnB,QAAO,SAACqD,GAAD,OAAaA,KAAStF,OAC9C,oBAAIpD,MAAO,CAAEwC,MAAO,WAApB,4BAEA,oBAAIxC,MAAO,CAAEwC,MAAO,WAApB,2BAEF,uBACA,4CACCR,EAAMiC,MAAMI,KAAI,SAACC,GAChB,OACE,qBACEtE,MAAO,CACLwC,MACe,UAAb8B,EAAK2B,MACQ,WAAb3B,EAAK2B,MACQ,YAAb3B,EAAK2B,KACD,UACA,WAPV,UAUG3B,EAAKE,SAVR,IAUmB,IACH,UAAbF,EAAK2B,KACF,SACa,WAAb3B,EAAK2B,KACL,0BACa,UAAb3B,EAAK2B,KACL,oBACa,YAAb3B,EAAK2B,KACL,WACa,WAAb3B,EAAK2B,KACL,UACa,WAAb3B,EAAK2B,KACL,UACa,UAAb3B,EAAK2B,KACL,SACA,4EAIV,uBACA,0CACCjE,EAAMwE,SAASnC,KAAI,SAACqE,EAASnE,GAC5B,OACE,oBAAIvE,MAAO,CAAEwC,MAAOkG,EAAU,UAAY,WAA1C,mBACEF,EAAKjE,GADP,sBAEcmE,EAAU,SAAW,mB,oCCwB9BC,EA9EA,SAAC3G,GAAW,IAAD,EACI1B,oBAAS,GADb,mBACjBgC,EADiB,KACTsG,EADS,OAEgBtI,mBAAS,iBAFzB,mBAEjBuI,EAFiB,KAEHC,EAFG,OAGMxI,qBAHN,mBAGjByI,EAHiB,KAGRC,EAHQ,KAWxB,OACE,qCAEe,GADZhH,EAAMiH,UAAU5D,QAAO,SAACI,GAAD,OAAYA,EAAO/D,IAAMM,EAAMnC,OAAO6B,MAC3D0B,OACD,qCACE,qEACCpB,EAAMkH,WAAalH,EAAMkH,UAAUxH,IAAMM,EAAMnC,OAAO6B,GACrD,qCACE,eAACyH,EAAA,EAAD,CAAU7G,OAAQA,EAAQH,OAVvB,kBAAMyG,GAAU,SAACQ,GAAD,OAAgBA,MAUnC,UACE,cAACC,EAAA,EAAD,CAAgBC,OAAK,EAArB,SAAuBT,IACvB,cAACU,EAAA,EAAD,UACGvH,EAAMwH,WAAWnF,KAAI,SAACoB,GACrB,OACE,cAACgE,EAAA,EAAD,CACErH,QAAS,WACP0G,EAAgBrD,EAAOjB,UACvBwE,EAAWvD,IAHf,SAMGA,EAAOjB,mBAOjBuE,EACC,eAACxG,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAjClB,WAClBJ,EAAMnC,OAAO+E,KAAK,cAAemE,IAgCrB,oBACUA,EAAQvE,SADlB,eAGE,QAEJxC,EAAMkH,UACR,+BAAKlH,EAAMkH,UAAU1E,SAArB,4BACE,QAGN,mGAIDxC,EAAMiH,UAAU5E,KAAI,SAACoB,GACpB,OACE,qBAAIzF,MAAO,CAAEwC,MAAO,WAApB,UACGiD,EAAOjB,SADV,IACqB,IACH,UAAfiB,EAAOQ,KACJ,SACe,WAAfR,EAAOQ,KACP,0BACe,UAAfR,EAAOQ,KACP,oBACe,YAAfR,EAAOQ,KACP,WACe,WAAfR,EAAOQ,KACP,UACe,WAAfR,EAAOQ,KACP,UACe,UAAfR,EAAOQ,KACP,SACA,gFCjEDyD,EAXC,WACd,OACE,gCACE,qBAAK3J,UAAU,MAAf,SACE,cAAC,IAAD,CAAMK,GAAG,IAAT,oBAEF,gDCUSuJ,EAhBkB,SAAC3H,GAAW,IAAD,EACZ1B,oBAAS,GADG,mBACnCsJ,EADmC,KAC1BC,EAD0B,KAa1C,OAVA9F,qBAAU,WAGR,OAFA+F,OAAOC,eAAiBH,GAAY,iBAAM,cAEnC,WACLE,OAAOC,eAAiB,QAEzB,CAACH,IAIG,CAFc,cAAC,IAAD,CAAQI,KAAMJ,EAASK,QAAQ,eAE9B,kBAAMJ,GAAW,IAAO,kBAAMA,GAAW,MdwQlDK,EAvQF,WAAO,IAAD,EACe5J,mBAAS6J,cAAY3F,SAAS4F,eAD7C,mBACV5F,EADU,aAEOlE,mBAAS6J,cAAYtG,KAAKuG,gBAFjC,mBAEVvG,EAFU,aAGSvD,mBAAS,KAHlB,mBAGV2D,EAHU,KAGHC,EAHG,OAImB5D,mBAAS,IAJ5B,mBAIV+H,EAJU,KAIEgC,EAJF,OAKe/J,oBAAS,GALxB,mBAKV4H,EALU,KAKAD,EALA,OAMmB3H,oBAAS,GAN5B,mBAMVgK,EANU,KAMEnC,EANF,OAOO7H,mBAA8B,SAArB6J,cAAY/F,MAP5B,mBAOVA,EAPU,aAQW9D,mBAAS,YARpB,mBAQViK,EARU,KAQFC,EARE,OASOlK,qBATP,mBASV2F,EATU,KASJwE,EATI,OAUOnK,qBAVP,mBAUV8H,EAVU,KAUJsC,EAVI,OAWOpK,qBAXP,mBAWViF,EAXU,KAWJoF,EAXI,QAYWrK,mBAAS,IAZpB,qBAYVkF,GAZU,MAYFoF,GAZE,SAa2BtK,mBAAS,IAbpC,qBAaVoF,GAbU,MAaMmF,GAbN,SAc2BvK,mBAAS,IAdpC,qBAcVqF,GAdU,MAcMmF,GAdN,SAeexK,qBAff,qBAeVmG,GAfU,MAeAsE,GAfA,SAgB2BzK,mBAAS,GAhBpC,qBAgBViG,GAhBU,MAgBMyE,GAhBN,SAiBe1K,mBAAS,IAjBxB,qBAiBVkG,GAjBU,MAiBAyE,GAjBA,SAkBW3K,oBAAS,GAlBpB,qBAkBVwG,GAlBU,MAkBFoE,GAlBE,SAmBqB5K,oBAAS,GAnB9B,qBAmBVyG,GAnBU,MAmBGC,GAnBH,SAoBqB1G,oBAAS,GApB9B,qBAoBVuG,GApBU,MAoBGI,GApBH,SAqBe3G,oBAAS,GArBxB,qBAqBV4E,GArBU,MAqBAiC,GArBA,SAsBqB7G,mBAAS,IAtB9B,qBAsBV0E,GAtBU,MAsBGC,GAtBH,SAuBiB3E,qBAvBjB,qBAuBV6E,GAvBU,MAuBCiC,GAvBD,SAwByB9G,qBAxBzB,qBAwBVmI,GAxBU,MAwBK0C,GAxBL,SAyBiB7K,mBAAS,IAzB1B,qBAyBV2I,GAzBU,MAyBCmC,GAzBD,SA0BmB9K,mBAAS,IA1B5B,qBA0BVkJ,GA1BU,MA0BE6B,GA1BF,SA2BiB/K,qBA3BjB,qBA2BV4I,GA3BU,MA2BCoC,GA3BD,SA6BoB3B,IA7BpB,qBA6BV4B,GA7BU,MA6BFC,GA7BE,YA+BjBzH,qBAAU,WACRlE,EAAS4L,IAAG,sCAEZ5J,QAAQC,IAAI,SAAUjC,GACtB2L,KAGA3L,EAAO+E,KAAK,WAAY,CAAEf,OAAMW,aAEhC3E,EAAOmE,GAAG,aAAa,YAAqB,EAAlBH,KAAmB,IAAbI,EAAY,EAAZA,MAC9BpC,QAAQC,IAAI,YAAamC,GACzBC,EAASD,MAGXpE,EAAOmE,GAAG,YAAaE,GAEvBrE,EAAOmE,GAAG,cAAc,SAAC0H,GACvBrB,EAAcqB,GACd7J,QAAQC,IAAI4J,MAGd7L,EAAOmE,GAAG,YAAa2H,IACvB9L,EAAOmE,GAAG,UAAW4H,IACrB/L,EAAOmE,GAAG,YAAa6H,IACvBhM,EAAOmE,GAAG,sBAAuB8H,IACjCjM,EAAOmE,GAAG,cAAeiB,IACzBpF,EAAOmE,GAAG,oBAAqBmD,IAE/BtH,EAAOmE,GAAG,WAAY+H,IAEtBlM,EAAOmE,GAAG,cAAc,YAAqB,IAAlBiC,EAAiB,EAAjBA,KAAMmC,EAAW,EAAXA,KAC/BsC,EAAQtC,GACRqC,EAAQxE,GACRpE,QAAQC,IAAI,cAAemE,EAAMmC,MAEnCvI,EAAOmE,GAAG,WAAY+G,IACtBlL,EAAOmE,GAAG,WAAYgI,IACtBnM,EAAOmE,GAAG,SAAUkH,IACpBrL,EAAOmE,GAAG,YAAaoD,IACvBvH,EAAOmE,GAAG,WAAYiH,IACtBpL,EAAOmE,GAAG,iBAAkBgH,IAC5BnL,EAAOmE,GAAG,YAAaoH,IACvBvL,EAAOmE,GAAG,aAAcqH,IACxBxL,EAAOmE,GAAG,YAAasH,IACvBzL,EAAOmE,GAAG,gBAAiBmH,IAE3Bc,SAASC,KAAKnC,eAAiB,wBAC9B,IAEH,IAAMiC,GAAW,WACf/E,IAAe,GACfiE,IAAU,IAONS,GAAY,SAACQ,GACjB3B,EAAU2B,IAGNN,GAAY,SAACO,GACjBxB,GAAUwB,IAYNN,GAAsB,SAACO,GAC3BxB,GAAkBwB,EAAMC,UACxBxB,GAAkBuB,EAAME,WAGpBR,GAAW,SAACS,GAChBxF,GAAewF,IAiCXZ,GAAU,SAACa,GACf9B,EAAQ8B,GACR5K,QAAQC,IAAR,0BAA+B2K,KA0BjC,OACE,sBAAK1M,UAAU,cAAf,UACc,YAAXwK,GAAmC,YAAXA,EACvB,mCACE,6BACE,cAAC,EAAD,CACEoB,UAAWA,GACX1F,KAAMA,EACNmC,KAAMA,EACNvI,OAAQA,EACRqI,SAAUA,EACVD,YAAaA,EACbzD,SAAUA,EACV2D,cAAeA,EACfE,WAAYA,QAIhB,KACQ,YAAXkC,EACC1K,GAAUoE,EAAMb,OAAS,EACvB,cAAC,EAAD,CACE0B,aAvDW,SAACqH,GACpB3B,EAAU2B,GACVtM,EAAO+E,KAAK,eAAgBuH,IAsDpB/H,KAAMA,EACNP,KAAMA,EACNI,MAAOA,EACPC,SAAUA,EACVrE,OAAQA,EACRoI,YAAaA,EACbxD,UArHQ,SAACiI,GACjB7M,EAAO+E,KAAK,YAAa8H,MAuHnB,cAAC,EAAD,IAEW,SAAXnC,GAAqBD,EACvB,cAAC,EAAD,CACE9E,OAAQA,GACRmC,aAjHa,SAACyE,GACpBxB,GAAUwB,GACVvM,EAAO+E,KAAK,eAAgBwH,IAgHtBzG,eAAgBA,GAChBmC,cAjGc,SAACqE,GAErBtM,EAAO+E,KAAK,gBAAiBuH,IAgGvBzG,eAAgBA,GAChBmC,cA9Fc,SAAC8E,GAErB9M,EAAO+E,KAAK,gBAAiB+H,IA6FvBpH,KAAMA,EACN1F,OAAQA,EACRoE,MAAOA,EACPwC,SAAUA,GACVF,eAAgBA,GAChBO,OAAQA,GACRoE,UAAWA,GACXnE,YAAaA,GACbC,eAAgBA,GAChBE,SArES,WACfrH,EAAO+E,KAAK,YAAa,CACvBW,KAAMA,EACNC,OAAQA,GACRG,eAAgBA,GAChBD,eAAgBA,KAElB7F,EAAO+E,KAAK,aA+DNiC,YAAaA,GACbI,eAAgBA,GAChB9B,UAAWA,GACXiC,aAAcA,GACdlC,SAAUA,GACViC,YAAaA,GACbnC,YAAaA,GACbC,eAAgBA,GAChBgB,KAAMA,EACNG,UA7GU,SAACX,GACjB5F,EAAO+E,KAAK,YAAaa,IA6GnBY,UA1GU,SAACZ,GACjB5F,EAAO+E,KAAK,YAAaa,IA0GnBgC,WAvGW,SAACJ,EAAQqB,GAC1B7I,EAAO+E,KAAK,UAAW,CACrByC,SACAqB,aAqGIlC,SAAUA,GACVoG,YAxIY,SAACC,GACnBhN,EAAO+E,KAAKiI,MAyIK,SAAXtC,EACF,cAAC,EAAD,CAAMoB,UAAWA,GAAW1F,KAAMA,EAAMmC,KAAMA,EAAMvI,OAAQA,IAChD,UAAV0K,EACF,cAAC,EAAD,CACEtG,MAAOA,EACPpE,OAAQA,EACRsL,iBAAkBA,GAClBjC,UAAWA,GACXD,UAAWA,GACXO,WAAYA,KAEF,WAAVe,EACF,cAAC,EAAD,CACEtG,MAAOA,EACPuC,SAAUA,GACViC,cAAeA,KAEf,KACH8C,O,SelMQuB,G,OA5EF,SAAC9K,GAAW,IAAD,EACU1B,mBAAS,IADnB,mBACfkE,EADe,KACLuI,EADK,OAEEzM,mBAAS6J,cAAYtG,MAFvB,mBAEfA,EAFe,KAETmJ,EAFS,OAGY1M,oBAAS,GAHrB,mBAGf2M,EAHe,KAGJC,EAHI,KAKtBnJ,qBAAU,WACuC,IAA3C+F,OAAOvJ,aAAaC,QAAQ,aAC9BuM,EAAYjD,OAAOvJ,aAAaC,QAAQ,aAGxCqD,GACoC,IAApCtD,aAAaC,QAAQ,aACgB,QAArCD,aAAaC,QAAQ,cAErB0M,GAAa,KAEd,IAUH,OACE,sBAAKnN,UAAU,UAAf,UACGkN,EAAY,cAAC,IAAD,CAAU7M,GAAE,gBAAWoE,EAAX,YAAuBX,EAAvB,YAA0C,KACnE,qBAAK9D,UAAU,MAAf,SACE,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAG,IAA1B,oBAIF,eAAC+M,EAAA,EAAD,CAAMC,SAZW,SAAC/L,GACpBA,EAAEgM,kBAWA,UACE,6CACA,cAACvM,EAAA,EAAD,CAAWf,UAAU,YAArB,SACE,eAACgB,EAAA,EAAD,kBAEE,cAACC,EAAA,EAAD,CACEjB,UAAU,eACVoB,MAAOqD,EACPpD,SAxBa,SAACC,GACxB0L,EAAY1L,EAAEC,OAAOH,QAwBXD,YAAY,uBAIlB,cAACJ,EAAA,EAAD,CAAWf,UAAU,YAArB,SACE,eAACgB,EAAA,EAAD,uBAEE,cAACC,EAAA,EAAD,CACEjB,UAAU,WACVoB,MAAO0C,EACPzC,SAAU,SAACC,GAAD,OAAO2L,EAAQ3L,EAAEC,OAAOH,QAClCD,YAAY,4BAIlB,cAAC,IAAD,CACEnB,UAAU,WACVqC,QAAS,SAACf,GAAD,OACNwC,GAASW,EAES,GAAfX,EAAKT,OACL,MACCkK,MAAM,gCAAiCjM,EAAEgM,kBAH1ChM,EAAEgM,kBAKRjN,GAAE,gBAAWoE,EAAX,YAAuBX,EAAvB,UATJ,0BCOO0J,G,OAjEF,WAAO,IAAD,EACejN,mBAAS,IADxB,mBACVkE,EADU,KACAuI,EADA,OAEOzM,mBAQxB,SAAgB8C,GAId,IAHA,IAAIoK,EAAS,GACTnF,EAAa,6BACboF,EAAmBpF,EAAWjF,OACzBmE,EAAI,EAAGA,EAAInE,EAAQmE,IAC1BiG,GAAUnF,EAAWqF,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAEzD,OAAOD,EAfwBM,CAAO,IAFvB,mBAEVjK,EAFU,UAIjBE,qBAAU,WACuC,IAA3C+F,OAAOvJ,aAAaC,QAAQ,aAC9BuM,EAAYjD,OAAOvJ,aAAaC,QAAQ,eAEzC,IAkBH,OAFAuD,qBAAU,cAAU,IAGlB,sBAAKhE,UAAU,UAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAG,IAA1B,oBAIF,eAAC+M,EAAA,EAAD,CAAMC,SAbW,SAAC/L,GACpBA,EAAEgM,kBAYA,UACE,6CACA,cAACvM,EAAA,EAAD,CAAWf,UAAU,YAArB,SACE,eAACgB,EAAA,EAAD,kBAEE,cAACC,EAAA,EAAD,CACEjB,UAAU,eACVoB,MAAOqD,EACPpD,SAAU,SAACC,GAAD,OAAO0L,EAAY1L,EAAEC,OAAOH,QACtCD,YAAY,gBACZ6M,UAAQ,SAId,cAAC,IAAD,CACEhO,UAAU,WACVqC,QAAS,SAACf,GAAD,OACNwC,GAASW,EAES,GAAfX,EAAKT,OACL,MACCkK,MAAM,UAAWjM,EAAEgM,kBAHpBhM,EAAEgM,kBAKRjN,GAAE,gBAAWoE,EAAX,YAAuBX,EAAvB,SATJ,0BCUOmK,EA7CH,WAAM,MAEY1N,oBAAS,GAFrB,6BAchB,OAVAyD,qBAAU,cAQP,IAGD,qBAAKhE,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkO,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,8BAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAU9N,GAAG,oBC1CV+N,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASrE,OACP,cAAC,IAAMsE,WAAP,UACE,cAAC,EAAD,MAEF5C,SAAS6C,eAAe,SAM1BX,M","file":"static/js/main.a99efdbc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Game.css\";\r\n\r\nimport Waiting from \"./GameComponents/Waiting\";\r\nimport Team from \"./GameComponents/Team\";\r\nimport Roll from \"./GameComponents/Roll\";\r\nimport Results from \"./GameComponents/Results\";\r\nimport Merlin from \"./GameComponents/Merlin\";\r\nimport Loading from \"../Game/Loading\";\r\n\r\nimport UseUnsavedChangesWarning from \"../Game/UseUnsavedChangesWarning\";\r\n\r\nlet socket;\r\n\r\nconst Game = () => {\r\n  const [username, setUsername] = useState(useParams().username.toUpperCase());\r\n  const [room, setRoom] = useState(useParams().room.toUpperCase());\r\n  const [users, setUsers] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [rollOpen, setRollOpen] = useState(true);\r\n  const [rollClosed, setRollClosed] = useState(false);\r\n  const [host, setHost] = useState(useParams().host === \"true\" ? true : false);\r\n  const [render, setRender] = useState(\"waiting\");\r\n  const [roll, setRoll] = useState();\r\n  const [sees, setSees] = useState();\r\n  const [king, setKing] = useState();\r\n  const [onTeam, setOnTeam] = useState([]);\r\n  const [acceptedPeople, setAcceptedPeople] = useState([]);\r\n  const [rejectedPeople, setRejectedPeople] = useState([]);\r\n  const [gameInfo, setGameInfo] = useState();\r\n  const [currentMission, setCurrentMission] = useState(1);\r\n  const [missions, setMissions] = useState([]);\r\n  const [voting, setVoting] = useState(false);\r\n  const [displayVote, setDisplayVote] = useState(false);\r\n  const [kingStarted, setKingStarted] = useState(false);\r\n  const [passFail, setPassFail] = useState(false);\r\n  const [passesFails, setPassesFails] = useState([]);\r\n  const [lastRound, setLastRound] = useState();\r\n  const [merlinCorrect, setMerlinCorrect] = useState();\r\n  const [badPeople, setBadPeople] = useState([]);\r\n  const [goodPeople, setGoodPeople] = useState([]);\r\n  const [chosenOne, setChosenOne] = useState();\r\n\r\n  const [Prompt, setDirty, setClean] = UseUnsavedChangesWarning();\r\n\r\n  useEffect(() => {\r\n    socket = io(\"avalonconnect-server.herokuapp.com\"); //! FOR HEROKU\r\n    // socket = io(\"localhost:3333\"); //! FOR LOCAL\r\n    console.log(\"SOCKET\", socket);\r\n    setDirty();\r\n\r\n    //! joining the game room\r\n    socket.emit(\"joinRoom\", { room, username });\r\n\r\n    socket.on(\"roomUsers\", ({ room, users }) => {\r\n      console.log(\"new users\", users);\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on(\"rearrange\", setUsers);\r\n\r\n    socket.on(\"characters\", (chars) => {\r\n      setCharacters(chars);\r\n      console.log(chars);\r\n    });\r\n\r\n    socket.on(\"newRender\", newRender);\r\n    socket.on(\"newKing\", newKing);\r\n    socket.on(\"newOnTeam\", newOnTeam);\r\n    socket.on(\"newAcceptedRejected\", newAcceptedRejected);\r\n    socket.on(\"newPassFail\", setPassesFails);\r\n    socket.on(\"newPassFailSingle\", setPassFail);\r\n\r\n    socket.on(\"showVote\", showVote);\r\n\r\n    socket.on(\"charReveal\", ({ roll, sees }) => {\r\n      setSees(sees);\r\n      setRoll(roll);\r\n      console.log(\"roll, sees:\", roll, sees);\r\n    });\r\n    socket.on(\"gameInfo\", setGameInfo);\r\n    socket.on(\"callVote\", callVote);\r\n    socket.on(\"voting\", setVoting);\r\n    socket.on(\"lastRound\", setLastRound);\r\n    socket.on(\"missions\", setMissions);\r\n    socket.on(\"currentMission\", setCurrentMission);\r\n    socket.on(\"badPeople\", setBadPeople);\r\n    socket.on(\"goodPeople\", setGoodPeople);\r\n    socket.on(\"chosenOne\", setChosenOne);\r\n    socket.on(\"merlinCorrect\", setMerlinCorrect);\r\n\r\n    document.body.onbeforeunload = \"return pageUnload()\";\r\n  }, []);\r\n\r\n  const callVote = () => {\r\n    setKingStarted(true);\r\n    setVoting(true);\r\n  };\r\n\r\n  const rearrange = (newUsers) => {\r\n    socket.emit(\"rearrange\", newUsers);\r\n  };\r\n\r\n  const newRender = (newR) => {\r\n    setRender(newR);\r\n  };\r\n\r\n  const newOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n  };\r\n\r\n  const changeOnTeam = (newO) => {\r\n    setOnTeam(newO);\r\n    socket.emit(\"changeOnTeam\", newO);\r\n  };\r\n\r\n  const newPassFail = (newPF) => {\r\n    socket.emit(newPF);\r\n  };\r\n\r\n  const newAcceptedRejected = (newAR) => {\r\n    setAcceptedPeople(newAR.accepted);\r\n    setRejectedPeople(newAR.rejected);\r\n  };\r\n\r\n  const showVote = (show) => {\r\n    setDisplayVote(show);\r\n  };\r\n\r\n  const addToRejected = (newR) => {\r\n    // setRejectedPeople([...rejectedPeople, newR]);\r\n    socket.emit(\"addToRejected\", newR);\r\n  };\r\n\r\n  const addToAccepted = (newA) => {\r\n    // setAcceptedPeople([...acceptedPeople, newA]);\r\n    socket.emit(\"addToAccepted\", newA);\r\n  };\r\n\r\n  const addToPass = (person) => {\r\n    socket.emit(\"addToPass\", person);\r\n  };\r\n\r\n  const addToFail = (person) => {\r\n    socket.emit(\"addToFail\", person);\r\n  };\r\n\r\n  const addMission = (passed, mission) => {\r\n    socket.emit(\"mission\", {\r\n      passed,\r\n      mission,\r\n    });\r\n  };\r\n\r\n  const changeRender = (newR) => {\r\n    setRender(newR);\r\n    socket.emit(\"changeRender\", newR);\r\n  };\r\n\r\n  const newKing = (newK) => {\r\n    setKing(newK);\r\n    console.log(`The new king is ${newK}`);\r\n  };\r\n\r\n  const changeKing = (newK) => {\r\n    setKing(newK);\r\n    socket.emit(\"changeKing\", newK);\r\n  };\r\n\r\n  const nextKing = () => {\r\n    socket.emit(\"lastRound\", {\r\n      king: king,\r\n      onTeam: onTeam,\r\n      rejectedPeople: rejectedPeople,\r\n      acceptedPeople: acceptedPeople,\r\n    });\r\n    socket.emit(\"nextKing\");\r\n  };\r\n\r\n  const toggleRoll = () => {\r\n    setRollOpen(!rollOpen);\r\n  };\r\n\r\n  function pageUnload() {\r\n    return \"The data on this page will be lost if you leave\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      {render !== \"waiting\" && render !== \"results\" ? (\r\n        <>\r\n          <h2>\r\n            <Roll\r\n              newRender={newRender}\r\n              roll={roll}\r\n              sees={sees}\r\n              socket={socket}\r\n              rollOpen={rollOpen}\r\n              setRollOpen={setRollOpen}\r\n              username={username}\r\n              setRollClosed={setRollClosed}\r\n              characters={characters}\r\n            />\r\n          </h2>\r\n        </>\r\n      ) : null}\r\n      {render === \"waiting\" ? (\r\n        socket && users.length > 0 ? (\r\n          <Waiting\r\n            changeRender={changeRender}\r\n            host={host}\r\n            room={room}\r\n            users={users}\r\n            setUsers={setUsers}\r\n            socket={socket}\r\n            setRollOpen={setRollOpen}\r\n            rearrange={rearrange}\r\n          />\r\n        ) : (\r\n          <Loading />\r\n        )\r\n      ) : render === \"team\" && rollClosed ? (\r\n        <Team\r\n          onTeam={onTeam}\r\n          changeOnTeam={changeOnTeam}\r\n          rejectedPeople={rejectedPeople}\r\n          addToRejected={addToRejected}\r\n          acceptedPeople={acceptedPeople}\r\n          addToAccepted={addToAccepted}\r\n          king={king}\r\n          socket={socket}\r\n          users={users}\r\n          gameInfo={gameInfo}\r\n          currentMission={currentMission}\r\n          voting={voting}\r\n          setVoting={setVoting}\r\n          displayVote={displayVote}\r\n          setDisplayVote={setDisplayVote}\r\n          nextKing={nextKing}\r\n          kingStarted={kingStarted}\r\n          setKingStarted={setKingStarted}\r\n          lastRound={lastRound}\r\n          setLastRound={setLastRound}\r\n          passFail={passFail}\r\n          setPassFail={setPassFail}\r\n          passesFails={passesFails}\r\n          setPassesFails={setPassesFails}\r\n          roll={roll}\r\n          addToPass={addToPass}\r\n          addToFail={addToFail}\r\n          addMission={addMission}\r\n          missions={missions}\r\n          newPassFail={newPassFail}\r\n        />\r\n      ) : render === \"roll\" ? (\r\n        <Roll newRender={newRender} roll={roll} sees={sees} socket={socket} />\r\n      ) : render == \"merlin\" ? (\r\n        <Merlin\r\n          users={users}\r\n          socket={socket}\r\n          setMerlinCorrect={setMerlinCorrect}\r\n          chosenOne={chosenOne}\r\n          badPeople={badPeople}\r\n          goodPeople={goodPeople}\r\n        />\r\n      ) : render == \"results\" ? (\r\n        <Results\r\n          users={users}\r\n          missions={missions}\r\n          merlinCorrect={merlinCorrect}\r\n        />\r\n      ) : null}\r\n      {Prompt}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/logo192.d6a61878.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logoImage from \"../../assets/logo192.png\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"nav\">\r\n        <div>\r\n          <h4>\r\n            <img style={{ width: \"35px\" }} src={logoImage} /> Avalon\r\n          </h4>\r\n        </div>\r\n        <Link to=\"/settings\">Settings</Link>\r\n      </div>\r\n      <br />\r\n      <Link className=\"homeMenuItem\" to=\"/join\">\r\n        Join a Game\r\n      </Link>\r\n      <br />\r\n      <br />\r\n      <Link className=\"homeMenuItem\" to=\"/host\">\r\n        Host a Game\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Input, Label, FormGroup, CustomInput } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const [defaultName, setDefaultName] = useState(\r\n    localStorage.getItem(\"username\")\r\n  );\r\n  const [enterGame, setEnterGame] = useState(\r\n    localStorage.getItem(\"enterGame\") == \"true\" ? true : false\r\n  );\r\n\r\n  const handleDefaultNameChange = (e) => {\r\n    setDefaultName(e.target.value);\r\n    localStorage.setItem(\"username\", e.target.value);\r\n  };\r\n\r\n  const handleEnterGameChange = (e) => {\r\n    console.log(\"hello\");\r\n    setEnterGame(e.target.checked);\r\n    localStorage.setItem(\"enterGame\", e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"1em\" }}>\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <h2>Settings</h2>\r\n      <hr />\r\n      <FormGroup>\r\n        <Label>\r\n          Default Name\r\n          <Input\r\n            style={{ textTransform: \"uppercase\" }}\r\n            placeholder=\"enter default name...\"\r\n            value={defaultName}\r\n            onChange={handleDefaultNameChange}\r\n          />\r\n        </Label>\r\n      </FormGroup>\r\n      <hr />\r\n      <FormGroup>\r\n        <Label for=\"enterGame\">\r\n          Automatically enter game after scanning QR code\r\n        </Label>\r\n        <CustomInput\r\n          id=\"enterGame\"\r\n          type=\"switch\"\r\n          // value={enterGame}\r\n          checked={enterGame}\r\n          onChange={handleEnterGameChange}\r\n        />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"reactstrap\";\r\n\r\nconst QR = (props) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const toggle = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <img src={props.src} onClick={toggle} />\r\n      <Modal isOpen={modalOpen} style={{ padding: \"1em\" }}>\r\n        <div style={{ padding: \".5em\" }}>\r\n          <img src={props.src} width=\"100%\" />\r\n          <br />\r\n          <Button color=\"warning\" onClick={toggle}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QR;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport qrCode from \"qrcode\";\r\n\r\nimport QR from \"./QR\";\r\n\r\nconst Waiting = (props) => {\r\n  const [percivalMorgana, setPercivalMorgana] = useState(true);\r\n  const [oberon, setOberon] = useState(true);\r\n  const [qrUrl, setQrUrl] = useState(\"\");\r\n\r\n  function array_move(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr; // for testing\r\n  }\r\n\r\n  const moveUp = (index) => {\r\n    props.rearrange(array_move(props.users, index, index + 1));\r\n  };\r\n\r\n  const moveDown = (index) => {\r\n    props.rearrange(array_move(props.users, index, index - 1));\r\n  };\r\n\r\n  const generateQr = async () => {\r\n    const response = await qrCode.toDataURL(\r\n      `https://avalonconnect.herokuapp.com/join/${props.room}`\r\n    );\r\n    setQrUrl(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.socket.on(\"roomUsers\", ({ room, users }) => {\r\n      props.setUsers(users);\r\n    });\r\n    generateQr();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(qrUrl);\r\n  }, [qrUrl]);\r\n\r\n  const startGame = () => {\r\n    props.socket.emit(\"startGame\", {\r\n      percivalMorgana: percivalMorgana,\r\n      oberon: oberon,\r\n      usersP: props.users,\r\n    });\r\n    props.changeRender(\"team\");\r\n    // props.setRollOpen\r\n  };\r\n\r\n  const handlePercivalMorganaClick = (e) => {\r\n    if (percivalMorgana) {\r\n      setPercivalMorgana(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setPercivalMorgana(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  const handleOberonClick = (e) => {\r\n    if (oberon) {\r\n      setOberon(false);\r\n      e.target.style.backgroundColor = \"#6c757d\";\r\n    } else {\r\n      setOberon(true);\r\n      e.target.style.backgroundColor = \"green\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      <h1 class=\"room\">{props.room}</h1>\r\n      {props.host ? (\r\n        <h5 className=\"hosting\">you are hosting</h5>\r\n      ) : (\r\n        <h5>waiting for host to start game...</h5>\r\n      )}\r\n      {props.users.map((user, index) => {\r\n        return (\r\n          <h3\r\n            style={{\r\n              color: `${props.socket.id == user.id ? \"#007bff\" : \"black\"}`,\r\n            }}\r\n          >\r\n            {user.username}{\" \"}\r\n            {props.host ? (\r\n              <span>\r\n                {index > 0 ? (\r\n                  <Button onClick={() => moveDown(index)}>^</Button>\r\n                ) : null}\r\n              </span>\r\n            ) : null}\r\n          </h3>\r\n        );\r\n      })}\r\n      {props.host ? (\r\n        <>\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handlePercivalMorganaClick}\r\n          >\r\n            Percival/Morgana\r\n          </Button>{\" \"}\r\n          <Button\r\n            style={{ backgroundColor: \"green\" }}\r\n            onClick={handleOberonClick}\r\n          >\r\n            Oberon\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <Button onClick={startGame}>START GAME</Button>\r\n          <br />\r\n        </>\r\n      ) : null}\r\n      {qrUrl ? <QR src={qrUrl} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst LastRound = (props) => {\r\n  const [passesFails, setPassesFails] = useState([]);\r\n  useEffect(() => {\r\n    if (!props.passFail) {\r\n      setPassesFails(props.passesFails);\r\n    }\r\n  }, [props.passFail]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {props.lastRound ? (\r\n        <>\r\n          <h5>\r\n            {passesFails.length > 0\r\n              ? `${\r\n                  passesFails.includes(true)\r\n                    ? passesFails.filter((item) => item).length\r\n                    : 0\r\n                } ${\r\n                  passesFails.filter((item) => item).length == 1\r\n                    ? \"pass\"\r\n                    : \"passes\"\r\n                }, ${\r\n                  passesFails.includes(false)\r\n                    ? passesFails.filter((item) => !item).length\r\n                    : 0\r\n                } ${\r\n                  passesFails.filter((item) => !item).length == 1\r\n                    ? \"fail\"\r\n                    : \"fails\"\r\n                }`\r\n              : null}\r\n          </h5>\r\n\r\n          <h4>The last king was {props.lastRound.king.username}</h4>\r\n          <h5>On the team:</h5>\r\n          {props.lastRound.onTeam.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Approved:</h5>\r\n          {props.lastRound.acceptedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n          <h5>Rejected:</h5>\r\n          {props.lastRound.rejectedPeople.map((person) => {\r\n            return <p>{person.username}</p>;\r\n          })}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LastRound;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst PassFail = (props) => {\r\n  /*\r\n    onTeam\r\n    passFail\r\n    socket\r\n    roll\r\n    */\r\n\r\n  const user = props.users.filter((user) => user.id == props.socket.id)[0];\r\n  const [isPassing, setIsPassing] = useState();\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n\r\n  const pass = () => {\r\n    setIsPassing(true);\r\n  };\r\n\r\n  const fail = () => {\r\n    setIsPassing(false);\r\n  };\r\n\r\n  const submit = () => {\r\n    if (isPassing) {\r\n      props.addToPass(user);\r\n      setHasSubmitted(true);\r\n    } else {\r\n      props.addToFail(user);\r\n      setHasSubmitted(true);\r\n    }\r\n  };\r\n\r\n  return props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n    1 ? (\r\n    hasSubmitted ? (\r\n      <h5>Waiting for team to vote...</h5>\r\n    ) : (\r\n      <>\r\n        <Button onClick={pass} color=\"success\">\r\n          Pass\r\n        </Button>{\" \"}\r\n        {props.roll == \"morgana\" ||\r\n        props.roll == \"minion\" ||\r\n        props.roll == \"mordred\" ||\r\n        props.roll == \"oberon\" ? (\r\n          <>\r\n            <Button onClick={fail} color=\"danger\">\r\n              Fail\r\n            </Button>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button color=\"danger\" disabled={true}>\r\n              Fail\r\n            </Button>\r\n            <br />\r\n          </>\r\n        )}\r\n        {isPassing != undefined ? (\r\n          <Button\r\n            style={{ marginTop: \"0.5em\" }}\r\n            color={isPassing ? \"success\" : \"danger\"}\r\n            onClick={submit}\r\n          >\r\n            {isPassing ? \"Submit pass\" : \"Submit fail\"}\r\n          </Button>\r\n        ) : null}\r\n      </>\r\n    )\r\n  ) : null;\r\n};\r\n\r\nexport default PassFail;\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Missions = (props) => {\r\n  return (\r\n    <>\r\n      {[0, 1, 2, 3, 4].map((index) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              color={\r\n                index == props.currentMission - 1\r\n                  ? \"primary\"\r\n                  : props.missions[index] == undefined\r\n                  ? \"secondary\"\r\n                  : props.missions[index]\r\n                  ? \"success\"\r\n                  : \"danger\"\r\n              }\r\n              style={{\r\n                color: index == 3 && props.gameInfo.twoFails ? \"black\" : \"\",\r\n              }}\r\n            >\r\n              {props.gameInfo.teams[index]}\r\n            </Button>{\" \"}\r\n          </>\r\n        );\r\n      })}\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Missions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport LastRound from \"./LastRound\";\r\nimport PassFail from \"./PassFail\";\r\nimport Missions from \"./Missions\";\r\n\r\nconst Team = (props) => {\r\n  useEffect(() => {\r\n    if (\r\n      props.kingStarted &&\r\n      props.voting == false &&\r\n      props.displayVote == true\r\n    ) {\r\n      if (props.rejectedPeople.length >= props.acceptedPeople.length) {\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setDisplayVote(false);\r\n        console.log(\"DISPLAY VOTE:\", props.displayVote);\r\n        props.setKingStarted(false);\r\n        if (props.king.id == props.socket.id) {\r\n          props.nextKing();\r\n        }\r\n      } else {\r\n        props.setPassFail(true);\r\n        props.setLastRound({\r\n          king: props.king,\r\n          onTeam: props.onTeam,\r\n          rejectedPeople: props.rejectedPeople,\r\n          acceptedPeople: props.acceptedPeople,\r\n        });\r\n      }\r\n    }\r\n  }, [props.displayVote, props.voting]);\r\n\r\n  useEffect(() => {\r\n    console.log(`Here is the displayVote: ${props.displayVote}`);\r\n  }, [props.displayVote]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.onTeam.length > 0 &&\r\n      props.passesFails.length == props.onTeam.length &&\r\n      props.king.id == props.socket.id\r\n    ) {\r\n      let passes = 0;\r\n      let fails = 0;\r\n      let passed;\r\n      for (let i = 0; i < props.passesFails.length; i++) {\r\n        if (props.passesFails[i]) {\r\n          passes++;\r\n        } else {\r\n          fails++;\r\n        }\r\n      }\r\n      if (props.gameInfo.twoFails && props.currentMission == 4) {\r\n        if (fails < 2) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      } else {\r\n        if (fails == 0) {\r\n          passed = true;\r\n        } else {\r\n          passed = false;\r\n        }\r\n      }\r\n      props.addMission(passed, props.currentMission);\r\n      //! Left off here\r\n      props.nextKing();\r\n      // props.newPassFail(false);\r\n      console.log(\"addMission\", passed, props.currentMission);\r\n    }\r\n  }, [props.passesFails]);\r\n\r\n  const handleAccept = () => {\r\n    if (!props.displayVote) {\r\n      props.addToAccepted(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleReject = () => {\r\n    if (!props.displayVote) {\r\n      props.addToRejected(\r\n        props.users.filter((user) => user.id === props.socket.id)[0]\r\n      );\r\n    }\r\n  };\r\n\r\n  const userInUsers = (user, users) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].id === user.id) {\r\n        return [true, i];\r\n      }\r\n    }\r\n    return [false, -1];\r\n  };\r\n\r\n  const callVote = () => {\r\n    props.socket.emit(\"callVote\");\r\n    // props.setVoting(true);\r\n    // props.setKingStarted(true);\r\n  };\r\n\r\n  const toggleOnTeam = (user) => {\r\n    if (props.socket.id === props.king.id && !props.voting && !props.passFail) {\r\n      if (userInUsers(user, props.onTeam)[0]) {\r\n        props.changeOnTeam(\r\n          props.onTeam.filter((person) => person.id !== user.id)\r\n        );\r\n      } else if (\r\n        props.gameInfo.teams[props.currentMission - 1] > props.onTeam.length\r\n      ) {\r\n        props.changeOnTeam([...props.onTeam, user]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.king.id === props.socket.id ? (\r\n        <>\r\n          <h2 style={{ color: \"#007bff\" }}>YOU ARE THE KING</h2>\r\n        </>\r\n      ) : (\r\n        <h2>{props.king.username} IS THE KING</h2>\r\n      )}\r\n      <Missions\r\n        currentMission={props.currentMission}\r\n        missions={props.missions}\r\n        gameInfo={props.gameInfo}\r\n      />\r\n      {props.gameInfo.twoFails && props.currentMission == 4 ? (\r\n        <h5 style={{ color: \"#dc3545\" }}>\r\n          This mission requires 2 fails to fail\r\n        </h5>\r\n      ) : null}\r\n      {props.users.map((user) => (\r\n        <h3\r\n          style={\r\n            userInUsers(user, props.onTeam)[0]\r\n              ? user.id == props.socket.id\r\n                ? {\r\n                    backgroundColor: \"#007bff\",\r\n                    color: \"white\",\r\n                  }\r\n                : {\r\n                    backgroundColor: \"#6c757d\",\r\n                    color: \"white\",\r\n                  }\r\n              : user.id == props.socket.id\r\n              ? {\r\n                  color: \"#007bff\",\r\n                }\r\n              : {}\r\n          }\r\n          onClick={() => toggleOnTeam(user)}\r\n        >\r\n          {user.username}\r\n        </h3>\r\n      ))}\r\n      <br />\r\n      <h5\r\n        style={{\r\n          color:\r\n            props.voting == true\r\n              ? props.acceptedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n                ? \"#218838\"\r\n                : props.rejectedPeople.filter(\r\n                    (item) => item.id == props.socket.id\r\n                  ).length == 1\r\n                ? \"#dc3545\"\r\n                : null\r\n              : props.acceptedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n              ? \"#218838\"\r\n              : props.rejectedPeople.filter(\r\n                  (item) => item.id == props.socket.id\r\n                ).length == 1\r\n              ? \"#dc3545\"\r\n              : props.displayVote\r\n              ? \"#ffc107\"\r\n              : null,\r\n        }}\r\n      >\r\n        {props.voting == true\r\n          ? props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n            ? \"You are approving...\"\r\n            : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n                .length == 1\r\n            ? \"You are rejecting...\"\r\n            : null\r\n          : props.acceptedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You approved\"\r\n          : props.rejectedPeople.filter((item) => item.id == props.socket.id)\r\n              .length == 1\r\n          ? \"You rejected\"\r\n          : props.displayVote\r\n          ? \"You didn't vote\"\r\n          : null}\r\n      </h5>\r\n      {props.passFail == true ? (\r\n        props.onTeam.filter((person) => person.id == props.socket.id).length ==\r\n        1 ? (\r\n          <h5>You are on the team</h5>\r\n        ) : (\r\n          <h5>Waiting for team to vote...</h5>\r\n        )\r\n      ) : null}\r\n      {props.passFail ? (\r\n        <PassFail\r\n          onTeam={props.onTeam}\r\n          roll={props.roll}\r\n          passFail={props.passFail}\r\n          socket={props.socket}\r\n          users={props.users}\r\n          addToPass={props.addToPass}\r\n          addToFail={props.addToFail}\r\n        />\r\n      ) : null}\r\n      {props.gameInfo.teams[props.currentMission - 1] == props.onTeam.length &&\r\n      props.socket.id === props.king.id &&\r\n      !props.voting &&\r\n      !props.displayVote ? (\r\n        <Button onClick={callVote}>Call for a vote</Button>\r\n      ) : null}\r\n      {props.voting ? (\r\n        <>\r\n          <Button color=\"success\" onClick={handleAccept}>\r\n            APPROVE\r\n          </Button>{\" \"}\r\n          <Button color=\"danger\" onClick={handleReject}>\r\n            REJECT\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n      <br />\r\n\r\n      <LastRound\r\n        lastRound={props.lastRound}\r\n        missions={props.missions}\r\n        currentMission={props.currentMission}\r\n        gameInfo={props.gameInfo}\r\n        passesFails={props.passesFails}\r\n        passFail={props.passFail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"reactstrap\";\r\nimport \"./Roll.css\";\r\n\r\nconst Roll = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  const toggleIsOpen = () => {\r\n    props.setRollOpen(!props.rollOpen);\r\n    props.setRollClosed(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"primary\" onClick={toggleIsOpen}>\r\n        {props.username}\r\n      </Button>\r\n      <Modal isOpen={props.rollOpen}>\r\n        <div id=\"roll-div\">\r\n          <h3\r\n            style={{\r\n              color:\r\n                props.roll == \"merlin\" ||\r\n                props.roll == \"servant\" ||\r\n                props.roll == \"percival\"\r\n                  ? \"#218838\"\r\n                  : \"#dc3545\",\r\n            }}\r\n          >\r\n            {props.roll === \"servant\"\r\n              ? \"You are a loyal servant of Arthur\"\r\n              : props.roll === \"percival\"\r\n              ? \"You are Percival\"\r\n              : props.roll === \"merlin\"\r\n              ? \"You are Merlin\"\r\n              : props.roll === \"minion\"\r\n              ? \"You are a minion of Mordred\"\r\n              : props.roll === \"morgana\"\r\n              ? \"You are Morgana\"\r\n              : props.roll === \"mordred\"\r\n              ? \"You are Mordred\"\r\n              : props.roll === \"oberon\"\r\n              ? \"You are Oberon\"\r\n              : null}\r\n          </h3>\r\n          <br />\r\n\r\n          {props.sees ? (\r\n            props.sees.length != 0 ? (\r\n              <>\r\n                <h4>You see:</h4>\r\n                <br />\r\n              </>\r\n            ) : null\r\n          ) : null}\r\n\r\n          {props.sees\r\n            ? props.sees.map((person) => (\r\n                <>\r\n                  <h4>• {person}</h4>\r\n                  {/* <br /> */}\r\n                </>\r\n              ))\r\n            : null}\r\n          <br />\r\n          <h4>Rolls:</h4>\r\n          <br />\r\n          {props.characters == undefined\r\n            ? null\r\n            : props.characters.map((character) => {\r\n                return (\r\n                  <h5\r\n                    style={{\r\n                      color:\r\n                        character == \"merlin\" ||\r\n                        character == \"servant\" ||\r\n                        character == \"percival\"\r\n                          ? \"#218838\"\r\n                          : \"#dc3545\",\r\n                    }}\r\n                  >\r\n                    {character == \"merlin\"\r\n                      ? \"Merlin\"\r\n                      : character == \"servant\"\r\n                      ? \"Loyal servant of Arthur\"\r\n                      : character == \"minion\"\r\n                      ? \"Minion of Mordred\"\r\n                      : character == \"percival\"\r\n                      ? \"Percival\"\r\n                      : character == \"morgana\"\r\n                      ? \"Morgana\"\r\n                      : character == \"mordred\"\r\n                      ? \"Mordred\"\r\n                      : character == \"oberon\"\r\n                      ? \"Oberon\"\r\n                      : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n                  </h5>\r\n                );\r\n              })}\r\n          <br />\r\n          <Button color=\"success\" onClick={toggleIsOpen}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roll;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Results = (props) => {\r\n  const [nums, setNums] = useState([\"1ST\", \"2ND\", \"3RD\", \"4TH\", \"5TH\"]);\r\n\r\n  return (\r\n    <>\r\n      {props.merlinCorrect != undefined ? (\r\n        props.merlinCorrect ? (\r\n          <>\r\n            <h2 style={{ color: \"#dc3545\" }}>Bad guys win!</h2>\r\n            <h5>Merlin was guessed correctly</h5>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2 style={{ color: \"#218838\" }}>Good guys win!</h2>\r\n            <h5>Merlin was guessed incorrectly</h5>\r\n          </>\r\n        )\r\n      ) : props.missions.filter((mission) => mission).length == 3 ? (\r\n        <h2 style={{ color: \"#218838\" }}>Good guys win!</h2>\r\n      ) : (\r\n        <h2 style={{ color: \"#dc3545\" }}>Bad guys win!</h2>\r\n      )}\r\n      <br />\r\n      <h3>Characters</h3>\r\n      {props.users.map((user) => {\r\n        return (\r\n          <h5\r\n            style={{\r\n              color:\r\n                user.roll == \"merlin\" ||\r\n                user.roll == \"servant\" ||\r\n                user.roll == \"percival\"\r\n                  ? \"#218838\"\r\n                  : \"#dc3545\",\r\n            }}\r\n          >\r\n            {user.username}:{\" \"}\r\n            {user.roll == \"merlin\"\r\n              ? \"Merlin\"\r\n              : user.roll == \"servant\"\r\n              ? \"Loyal servant of Arthur\"\r\n              : user.roll == \"minion\"\r\n              ? \"Minion of Mordred\"\r\n              : user.roll == \"percival\"\r\n              ? \"Percival\"\r\n              : user.roll == \"morgana\"\r\n              ? \"Morgana\"\r\n              : user.roll == \"mordred\"\r\n              ? \"Mordred\"\r\n              : user.roll == \"oberon\"\r\n              ? \"Oberon\"\r\n              : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n          </h5>\r\n        );\r\n      })}\r\n      <br />\r\n      <h3>Missions</h3>\r\n      {props.missions.map((mission, index) => {\r\n        return (\r\n          <h4 style={{ color: mission ? \"#218838\" : \"#dc3545\" }}>{`${\r\n            nums[index]\r\n          } MISSION - ${mission ? \"PASSED\" : \"FAILED\"}`}</h4>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Merlin = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dropdownText, setDropdownText] = useState(\"Select Merlin\");\r\n  const [goodGuy, setGoodGuy] = useState();\r\n\r\n  const guessMerlin = () => {\r\n    props.socket.emit(\"guessMerlin\", goodGuy);\r\n  };\r\n\r\n  const toggle = () => setIsOpen((prevState) => !prevState);\r\n\r\n  return (\r\n    <>\r\n      {props.badPeople.filter((person) => person.id == props.socket.id)\r\n        .length == 1 ? (\r\n        <>\r\n          <h3>Go discuss who you think Merlin is!</h3>\r\n          {props.chosenOne && props.chosenOne.id == props.socket.id ? (\r\n            <>\r\n              <Dropdown isOpen={isOpen} toggle={toggle}>\r\n                <DropdownToggle caret>{dropdownText}</DropdownToggle>\r\n                <DropdownMenu>\r\n                  {props.goodPeople.map((person) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        onClick={() => {\r\n                          setDropdownText(person.username);\r\n                          setGoodGuy(person);\r\n                        }}\r\n                      >\r\n                        {person.username}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                  {/* <DropdownItem>{props.goodPeople.length}</DropdownItem> */}\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              {goodGuy ? (\r\n                <Button color=\"success\" onClick={guessMerlin}>\r\n                  Submit {goodGuy.username} as guess\r\n                </Button>\r\n              ) : null}\r\n            </>\r\n          ) : props.chosenOne ? (\r\n            <h3>{props.chosenOne.username} will submit the guess</h3>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <h3>\r\n          The bad guys are discussing Merlin, remember to keep it a secret!\r\n        </h3>\r\n      )}\r\n      {props.badPeople.map((person) => {\r\n        return (\r\n          <h5 style={{ color: \"#dc3545\" }}>\r\n            {person.username}:{\" \"}\r\n            {person.roll == \"merlin\"\r\n              ? \"Merlin\"\r\n              : person.roll == \"servant\"\r\n              ? \"Loyal servant of Arthur\"\r\n              : person.roll == \"minion\"\r\n              ? \"Minion of Mordred\"\r\n              : person.roll == \"percival\"\r\n              ? \"Percival\"\r\n              : person.roll == \"morgana\"\r\n              ? \"Morgana\"\r\n              : person.roll == \"mordred\"\r\n              ? \"Mordred\"\r\n              : person.roll == \"oberon\"\r\n              ? \"Oberon\"\r\n              : \"Unknown roll!! This is a bug!! You should never see this message!!!\"}\r\n          </h5>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Merlin;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"nav\">\r\n        <Link to=\"/\">Exit</Link>\r\n      </div>\r\n      <h1>Loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nconst UseUnsavedChangesWarning = (props) => {\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = isDirty && (() => \"Exit game?\");\r\n\r\n    return () => {\r\n      window.onbeforeunload = null;\r\n    };\r\n  }, [isDirty]);\r\n\r\n  const routerPrompt = <Prompt when={isDirty} message=\"Exit game?\" />;\r\n\r\n  return [routerPrompt, () => setIsDirty(true), () => setIsDirty(false)];\r\n};\r\n\r\nexport default UseUnsavedChangesWarning;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(useParams().room);\r\n  const [enterRoom, setEnterRoom] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"username\") != \"\") {\r\n      setUsername(window.localStorage.getItem(\"username\"));\r\n    }\r\n    if (\r\n      room &&\r\n      localStorage.getItem(\"username\") != \"\" &&\r\n      localStorage.getItem(\"enterGame\") == \"true\"\r\n    ) {\r\n      setEnterRoom(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {enterRoom ? <Redirect to={`/game/${username}/${room}/false`} /> : null}\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Join a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"joinUsername\"\r\n              value={username}\r\n              onChange={handleNameChange}\r\n              placeholder=\"Enter name...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            GAME CODE\r\n            <Input\r\n              className=\"joinRoom\"\r\n              value={room}\r\n              onChange={(e) => setRoom(e.target.value)}\r\n              placeholder=\"Enter game code...\"\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"joinGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"GAME CODE MUST BE 4 DIGITS!!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/false`}\r\n        >\r\n          Join\r\n        </Link>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport \"./Host.css\";\r\n\r\nconst Host = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(makeid(4));\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"username\") != \"\") {\r\n      setUsername(window.localStorage.getItem(\"username\"));\r\n    }\r\n  }, []);\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"nav\">\r\n        <Link className=\"back\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Host a Game</h2>\r\n        <FormGroup className=\"formGroup\">\r\n          <Label>\r\n            NAME\r\n            <Input\r\n              className=\"hostUsername\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter name...\"\r\n              required\r\n            />\r\n          </Label>\r\n        </FormGroup>\r\n        <Link\r\n          className=\"hostGame\"\r\n          onClick={(e) =>\r\n            !room || !username\r\n              ? e.preventDefault()\r\n              : room.length == 4\r\n              ? null\r\n              : (alert(\"Error!\"), e.preventDefault())\r\n          }\r\n          to={`/game/${username}/${room}/true`}\r\n        >\r\n          Host\r\n        </Link>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Host;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport queryString from \"querystring\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Home from \"./Components/Game/Home\";\nimport Settings from \"./Components/Game/Settings\";\nimport Game from \"./Components/Game/Game\";\nimport Join from \"./Components/Join/Join\";\nimport Host from \"./Components/Host/Host\";\n\nconst App = () => {\n  // const socketRef = useRef();\n  const [inRoom, setInRoom] = useState(false);\n\n  useEffect(() => {\n    // socket = io(\"avalonconnect-server.herokuapp.com\"); //! CHANGE BEFORE PUSHING\n    // socket = io(\"localhost:3333\");\n    // socket.emit(\"here\");\n    // console.log(\"SOCKET:\", socket);\n    // socket.on(\"count\", (count) => {\n    //   setCount(count);\n    // });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/join/:room\">\n            <Join />\n          </Route>\n          <Route exact path=\"/join\">\n            <Join />\n          </Route>\n          <Route exact path=\"/host\">\n            <Host />\n          </Route>\n          <Route exact path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/game/:username/:room/:host\">\n            <Game />\n          </Route>\n          <Route>\n            <Redirect to=\"/join\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}